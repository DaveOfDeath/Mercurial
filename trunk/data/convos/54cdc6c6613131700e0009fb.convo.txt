idRef {
  id: "54cdc6c6613131700e0009fb"
}
ui_name: "LTG - StarkafBarista"
nodes {
  idRef {
    id: "54cdc6e9613131700e000a01"
  }
  index: 0
  text: "{{GM}}The program stares blankly at you, offering a sculpted hint of a smile.{{/GM}}\n\"How may I serve you?\" it asks."
  branches {
    responseText: "What\'s with that odd connection on the side of the room?"
    nextNodeIndex: 1
    onlyOnce: true
    idRef {
      id: "54cdc839613131700e000a16"
    }
  }
  branches {
    responseText: "Can I order soykaf delivered to my home?"
    nextNodeIndex: 2
    onlyOnce: true
    idRef {
      id: "54cdc77e613131700e000a05"
    }
  }
  branches {
    responseText: "Can I order a StarKaf delivered to my home?"
    nextNodeIndex: 3
  }
  branches {
    responseText: "{{CC}}10\302\245{{/CC}} I\'ll order a StarKaf."
    conditions {
      ops {
        functionName: "Evaluate Nuyen"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 10
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Heal Actor"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
            }
          }
        }
        args {
          int_value: 75
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HPOrAP"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "No thank you."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "54cdc7cf613131700e000a13"
  }
  index: 1
  text: "Our corporate deckers have determined that someone is illegally using our matrix access. For your own safety, do not attempt to access the area behind the software firewall. Our corporate teams will deal with the problem, restoring full traffic flow and speed."
  branches {
    responseText: ""
    nextNodeIndex: 0
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "54cdc787613131700e000a07"
  }
  index: 2
  text: "I apologize, but we only serve StarKaf, the finest soykaf that Seattle has to offer."
  branches {
    responseText: ""
    nextNodeIndex: 0
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "54cdc903613131700e000a39"
  }
  index: 3
  text: "{{GM}}The virtual barista gives you a smile, and says{{/GM}} \"I can do better than that- through the reality of simsense technology, I can stimulate your brain directly, making you feel as though you had drunk the finest StarKaf in the safety of your own home.\""
  branches {
    responseText: "That sounds dangerous."
    nextNodeIndex: 4
  }
  branches {
    responseText: "{{CC}}10\302\245{{/CC}} I\'ll order a StarKaf."
    conditions {
      ops {
        functionName: "Evaluate Nuyen"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 10
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Heal Actor"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
            }
          }
        }
        args {
          int_value: 75
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HPOrAP"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "No thanks."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "54cdc9b2613131700e000a41"
  }
  index: 4
  text: "\"I assure you, despite years of study of the connection between simsense use and brain damage, no conclusive links have ever been proven.\""
  branches {
    responseText: "{{CC}}10\302\245{{/CC}} I\'ll order a StarKaf."
    conditions {
      ops {
        functionName: "Evaluate Nuyen"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 10
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Heal Actor"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
            }
          }
        }
        args {
          int_value: 75
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HPOrAP"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "No thanks."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  nextNodeIndex: 0
}

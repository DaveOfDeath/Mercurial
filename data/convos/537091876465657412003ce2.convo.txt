idRef {
  id: "537091876465657412003ce2"
}
ui_name: "NPC - Silver Arrow"
nodes {
  idRef {
    id: "537092a86465657412003cf9"
  }
  index: 0
  text: "Hoi $(l.name), my chummer. "
  branches {
    responseText: "Yes, can you fix it?"
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "int_Story_Arrow"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 4
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "int_Story_Arrow"
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 1
  }
  branches {
    responseText: "We don\'t have problems- you have problems, you\'re the tech."
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "int_Story_Arrow"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 4
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "int_Story_Arrow"
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 5
  }
  branches {
    responseText: "None of the maglocks work, and the cameras are down."
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "int_Story_Arrow"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 4
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "int_Story_Arrow"
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 6
  }
  branches {
    responseText: "Yeah, what\'s up?"
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "int_Story_Arrow"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "int_Story_Arrow"
            }
          }
        }
        args {
          int_value: 2
        }
      }
    }
    nextNodeIndex: 9
    hideIfUnavailable: true
    comment: "Story1"
  }
  branches {
    responseText: "Talk to {{CC}}Silver Arrow{{/CC}}."
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "int_Story_Arrow"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 2
        }
      }
    }
    nextNodeIndex: 19
    hideIfUnavailable: true
    comment: "Story 2"
  }
  branches {
    responseText: "Talk to {{CC}}Silver Arrow{{/CC}}."
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "int_Story_Arrow"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 3
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
    comment: "Story 3"
  }
  branches {
    responseText: "Talk to {{CC}}Silver Arrow{{/CC}}."
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "int_Story_Arrow"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 4
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
    comment: "Story 4"
  }
  branches {
    responseText: "{{CC}}Hire{{/CC}} Silver Arrow."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "bool_isHired_SilverAro"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "int_Story_Arrow"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 4
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    actions {
      ops {
        functionName: "Change Actor Team"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Actor)"
                args {
                  string_value: "54b289eb6131317007006115"
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
      ops {
        functionName: "Remove Tag from Actor"
        args {
          call_value {
            functionName: "Get Map Item (SenseTagList)"
            args {
              string_value: "isUnhired"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Actor)"
                args {
                  string_value: "54b289eb6131317007006115"
                }
              }
            }
            args {
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "bool_isHired_SilverAro"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
  }
  branches {
    responseText: "{{CC}}Fire{{/CC}} Silver Arrow."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "bool_isHired_SilverAro"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "int_Story_Arrow"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 4
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    actions {
      ops {
        functionName: "Change Actor Team"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Actor)"
                args {
                  string_value: "54b289eb6131317007006115"
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
      ops {
        functionName: "Add Tag to Actor"
        args {
          call_value {
            functionName: "Get Map Item (SenseTagList)"
            args {
              string_value: "isUnhired"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Actor)"
                args {
                  string_value: "54b289eb6131317007006115"
                }
              }
            }
            args {
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "bool_isHired_SilverAro"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
  }
  branches {
    responseText: "Walk away."
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "int_Story_Arrow"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 4
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "52af741e383738581100170c"
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "542848a8633464d816001ad5"
          }
          args {
            string_value: "bool_Met_Silver_ARO"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  comment: "Introduction"
}
nodes {
  idRef {
    id: "537095ff6465657412003cfd"
  }
  index: 1
  text: "I can take a look chummer, but I can\'t promise anything. First, let me check the security log-files and reset all the protocols."
  branches {
    responseText: "The cameras aren\'t working at all, either."
    nextNodeIndex: 2
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "542568056465651c16004de8"
  }
  index: 2
  text: "Chummer, who the frag brought this broke-hoop old tech? See this panel-- it has the manufacture date stamped in here: SERETECH2021. This panel is older than you by about ten years."
  branches {
    responseText: "Don\'t ask, just repair it...I don\'t know, and I don\'t care. Fix it."
    nextNodeIndex: -1
  }
  branches {
    responseText: "I didn\'t buy the tech, it was here when we moved in. Grey said you were the best man for this job."
    nextNodeIndex: 3
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "542568ce6465651c16004dec"
  }
  index: 3
  text: "Chummer, chummer, chummer, why didn\'t you ask just me?"
  branches {
    responseText: "I don\'t like expensive, bossy deckers. Stop saying \'chummer,\' and get to work."
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "eve_FixSecSystem"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "You always charge me a premium on top of whatever giz tech you want at the time. I\'m not made of cred."
    nextNodeIndex: 4
  }
  branches {
    responseText: "If you can fix this, I might listen next time you say we need an upgrade."
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "eve_FixSecSystem"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5425691f6465651c16004df0"
  }
  index: 4
  text: "Chummer, therein lies the problem. When you pay for top-tier tech and expert help, you avoid problems like this- whatever chiphead wired this forgot to reset the safety protocols- basically, he set it so he couldn\'t lock himself out of the flat."
  branches {
    responseText: "Okay, but you can fix it, right?"
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "eve_FixSecSystem"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "Less fragging lip, more fixing tech."
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "eve_FixSecSystem"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "537096306465657412003cff"
  }
  index: 5
  text: "Very funny, chummer. If you suddenly get spammed on your commlink with troll porn ads, it wasn\'t me. Let me check the function log, see what I can find out."
  branches {
    responseText: "The cams are not functional eather."
    nextNodeIndex: 2
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "542568056465651c16004de8"
  }
  index: 6
  text: "Chummer, who the frag brought this broke-hoop old tech?"
  branches {
    responseText: "Don\'t ask, just repair it..."
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "eve_FixSecSystem"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "Well, I didn\'t. You know, Grey told us he had a top contact for this."
    nextNodeIndex: 7
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "542568ce6465651c16004dec"
  }
  index: 7
  text: "Why didn\'t you ask just me?"
  branches {
    responseText: "Because I don\'t like you... Now fix it!"
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "eve_FixSecSystem"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "You are always buying too expensive stuff, man."
    nextNodeIndex: 8
  }
  branches {
    responseText: "Yeah, you are right. Next time, I\'m listening... Now let\'s go to work."
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "eve_FixSecSystem"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5425691f6465651c16004df0"
  }
  index: 8
  text: "To prevent things like this..."
  branches {
    responseText: "Do your job now..."
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "eve_FixSecSystem"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "I hear ya. Let\'s work."
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "eve_FixSecSystem"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "54cc4eb56131314c19006586"
  }
  index: 9
  text: "\"Hoi Chummer, I know you just got into this place, but if you\'re looking for a team, I might be able to help out.\""
  branches {
    responseText: "Fix the tech, I\'ll worry about the team."
    nextNodeIndex: 10
  }
  branches {
    responseText: "What do you mean?"
    nextNodeIndex: 10
    auxiliaryLink: true
  }
  branches {
    responseText: "Not interested, just fix the tech problems."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "54dcd7cb666632601d004f0d"
  }
  index: 10
  text: "\"I got invited to a meet not far from here. Johnson wanted to put together a team, reached out to everyone who was new to the Shadows.\""
  branches {
    responseText: "Where?"
    nextNodeIndex: 11
    onlyOnce: true
    idRef {
      id: "54dcdb3c666632601d004fd7"
    }
  }
  branches {
    responseText: "Who put it together?"
    nextNodeIndex: 16
  }
  branches {
    responseText: "Not interested."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "54dcd81d666632601d004f14"
  }
  index: 11
  text: "\"The Stuffer Shack up on the street, in the middle of the market. The place is closed down because gangers shot it up, but the manager does favors for runners.\""
  branches {
    responseText: "Who put it together?"
    nextNodeIndex: 12
  }
  branches {
    responseText: "Not interested."
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bool_Hiring"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "54dcd857666632601d004f16"
  }
  index: 12
  text: "\"Out of town Johnson, I don\'t know him chummer.\""
  branches {
    responseText: "Who says that the Johnson won\'t show up?"
    nextNodeIndex: 13
  }
  branches {
    responseText: "I may check it out, don\'t worry about it."
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bool_Hiring"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "Who set up the meeting?"
    nextNodeIndex: 14
  }
  branches {
    responseText: "Where?"
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bool_Hiring"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 11
    onlyOnce: true
    idRef {
      id: "54dcdb42666632601d004fd8"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "54dcd947666632601d004f1e"
  }
  index: 13
  text: "I don\'t know, Chummer, you take that risk."
  branches {
    responseText: "I may check it out, don\'t worry about it."
    actions {
      ops {
        functionName: "No Effect"
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "54dcd8f9666632601d004f1b"
  }
  index: 14
  text: "\"MFI. He\'s a low-level fixer. Works with anyone who\'s willing, but he doesn\'t have the best reputation.\""
  branches {
    responseText: "MFI? Never heard of him."
    nextNodeIndex: 15
  }
  branches {
    responseText: "I don\'t work with people I don\'t know."
    nextNodeIndex: -1
  }
  branches {
    responseText: "Sure, I\'ll go to the meeting."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "54dcdb5a666632601d004fdb"
  }
  index: 15
  text: "\"Mister Fix It, he\'s an elf. Some people call him Mother Fragging Idiot; I guess it depends on how much you like him.\""
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "54dcd857666632601d004f16"
  }
  index: 16
  text: "\"Out of town Johnson, I don\'t know him chummer.\""
  branches {
    responseText: "Who says that the Johnson won\'t show up?"
    nextNodeIndex: 17
  }
  branches {
    responseText: "I may check it out, don\'t worry about it."
    nextNodeIndex: -1
  }
  branches {
    responseText: "Where?"
    nextNodeIndex: 11
    auxiliaryLink: true
  }
  branches {
    responseText: "Who set up the meeting?"
    nextNodeIndex: 18
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "54dcd947666632601d004f1e"
  }
  index: 17
  text: ""
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "54dcd8f9666632601d004f1b"
  }
  index: 18
  text: "\"MFI. He\'s a low-level fixer. Works with anyone who\'s willing, but he doesn\'t have the best reputation.\""
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "54dcdc81666632601d005026"
  }
  index: 19
  text: "\"Hoi Chummer. What\'s up?\""
  branches {
    responseText: "Can you tell me what you think of these other runners?"
    nextNodeIndex: -1
  }
  branches {
    responseText: "What do you think about the run?"
    nextNodeIndex: -1
  }
  branches {
    responseText: ""
    nextNodeIndex: -1
  }
  branches {
    responseText: ""
    nextNodeIndex: -1
  }
  branches {
    responseText: ""
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_ARO_Fixes_Sec_System"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  nextNodeIndex: 0
  comment: "// Sets The ARO Fix int variable to 1"
}

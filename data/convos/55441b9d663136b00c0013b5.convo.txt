idRef {
  id: "55441b9d663136b00c0013b5"
}
ui_name: "Sunnyside - Legwork [Randomized]"
nodes {
  idRef {
    id: "55441c1e663136b00c0013d5"
  }
  index: 0
  text: "{{GM}}$(scene.sCharacterIntro){{/GM}}\n\n$(story.str_NPCIntroText)"
  branches {
    responseText: "What can you tell me about New Horizons?"
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "str_NPCIntroText"
            }
          }
        }
        args {
        }
      }
    }
    nextNodeIndex: 1
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "5562d549393066200c003a7d"
    }
  }
  branches {
    responseText: "What can you tell me about Sunnyside?"
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "str_NPCIntroText"
            }
          }
        }
        args {
          string_value: "\"Now the drugs, cheap women, and selfish pursuits are what inform the decisions of the men and women in this area.\""
        }
      }
    }
    nextNodeIndex: 3
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "5562d7a7393066200c003aa0"
    }
  }
  branches {
    responseText: "Have you seen anything that I should know about?"
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "str_NPCIntroText"
            }
          }
        }
        args {
          string_value: "\"There\'s a fragging DRAGON in the area? I haven\'t seen it myself, but it burned down a section of the Street Market. I heard a lot of people got hurt, but we\'ve only seen a small portion o them come here.\""
        }
      }
    }
    nextNodeIndex: 0
    auxiliaryLink: true
  }
  branches {
    responseText: "Thanks."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5562d5d7393066200c003a7f"
  }
  index: 1
  text: "\"About a year ago, New Horizons started buying up everything that they could get their hands on. Anything for sale in Sunnyside went to the highest bidder, and those bidders started fighting over land that hadn\'t been worth the electronic deed it was written on.\""
  branches {
    responseText: ""
    nextNodeIndex: 2
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5562d670393066200c003a82"
  }
  index: 2
  text: "\"A few places, like the Tail and Ale, have held onto their land, maybe even bought a few buildings around them, but for the most part, anyone who wanted to get out was given the golden ticket to move out of the slums, and people took it.\""
  branches {
    responseText: ""
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "str_NPCIntroText"
            }
          }
        }
        args {
          string_value: "\"It\'s just too hard, when you have a starving family, to wait out for the best sales price on your land. I bet those suckers who sold in the first week for tiny money are kicking themselves.\""
        }
      }
    }
    nextNodeIndex: 0
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5562d702393066200c003a8f"
  }
  index: 3
  text: "\"Sunnyside was a great place to live, and I don\'t know that I\'d want to raise a family here. No schools, no libraries, three whorehouses. It used to be, everyone was a exec or worker at Perfekto Polymers. When we needed things, we got them, but now that the company is gone, no one is paying for anything!\""
  branches {
    responseText: ""
    nextNodeIndex: 0
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55441c2c663136b00c0013d7"
  }
  index: 4
  text: "Contact Person: 2\n\n{{GM}}$(scene.sCharacterIntro){{/GM}}\n\n$(story.str_NPCIntroText)"
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55441c30663136b00c0013d9"
  }
  index: 5
  text: "Contact Person: 3\n\n{{GM}}$(scene.sCharacterIntro){{/GM}}\n\n$(story.str_NPCIntroText)"
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55441c34663136b00c0013db"
  }
  index: 6
  text: "Contact Person: 4\n\n{{GM}}$(scene.sCharacterIntro){{/GM}}\n\n$(story.str_NPCIntroText)"
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55441c36663136b00c0013dd"
  }
  index: 7
  text: "Contact Person: 5\n\n{{GM}}$(scene.sCharacterIntro){{/GM}}\n\n$(story.str_NPCIntroText)"
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55441c38663136b00c0013df"
  }
  index: 8
  text: "Contact Person: 6\n\n{{GM}}$(scene.sCharacterIntro){{/GM}}\n\n$(story.str_NPCIntroText)"
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55441c3b663136b00c0013e1"
  }
  index: 9
  text: "Contact Person: 7\n\n{{GM}}$(scene.sCharacterIntro){{/GM}}\n\n$(story.str_NPCIntroText)"
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55441c40663136b00c0013e5"
  }
  index: 10
  text: "Contact Person: 9\n\n{{GM}}$(scene.sCharacterIntro){{/GM}}\n\n$(story.str_NPCIntroText)"
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55441c3d663136b00c0013e3"
  }
  index: 11
  text: "Contact Person: 8\n\n{{GM}}$(scene.sCharacterIntro){{/GM}}\n\n$(story.str_NPCIntroText)"
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55441c42663136b00c0013e7"
  }
  index: 12
  text: "Contact Person: 10\n\n{{GM}}$(scene.sCharacterIntro){{/GM}}\n\n$(story.str_NPCIntroText)"
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55441c45663136b00c0013e9"
  }
  index: 13
  text: "Contact Person: 11\n\n{{GM}}$(scene.sCharacterIntro){{/GM}}\n\n$(story.str_NPCIntroText)"
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "55441c47663136b00c0013eb"
  }
  index: 14
  text: "Contact Person: 12\n\n{{GM}}$(scene.sCharacterIntro){{/GM}}\n\n$(story.str_NPCIntroText)"
  nodeType: ConversationNodeType_Simple
}
roots {
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                string_value: "isContact1"
              }
            }
          }
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "542848a8633464d816001ad5"
          }
          args {
            string_value: "str_NPCIntroText"
          }
        }
      }
      args {
        string_value: "\"Hey, what can I do for you?\""
      }
    }
  }
  nextNodeIndex: 0
  comment: "Contact:1"
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                string_value: "isContact2"
              }
            }
          }
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
  }
  nextNodeIndex: 4
  comment: "Contact:2"
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                string_value: "isContact3"
              }
            }
          }
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
  }
  nextNodeIndex: 5
  comment: "Contact:3"
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                string_value: "isContact4"
              }
            }
          }
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
  }
  nextNodeIndex: 6
  comment: "Contact:4"
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                string_value: "isContact5"
              }
            }
          }
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
  }
  nextNodeIndex: 7
  comment: "Contact:5"
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                string_value: "isContact6"
              }
            }
          }
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
  }
  nextNodeIndex: 8
  comment: "Contact:6"
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                string_value: "isContact7"
              }
            }
          }
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
  }
  nextNodeIndex: 9
  comment: "Contact:7"
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                string_value: "isContact9"
              }
            }
          }
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
  }
  nextNodeIndex: 10
  comment: "Contact:9"
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                string_value: "isContact8"
              }
            }
          }
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
  }
  nextNodeIndex: 11
  comment: "Contact:8"
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                string_value: "isContact10"
              }
            }
          }
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
  }
  nextNodeIndex: 12
  comment: "Contact:10"
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                string_value: "isContact11"
              }
            }
          }
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
  }
  nextNodeIndex: 13
  comment: "Contact:11"
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                string_value: "isContact12"
              }
            }
          }
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
  }
  nextNodeIndex: 14
  comment: "Contact:12"
}

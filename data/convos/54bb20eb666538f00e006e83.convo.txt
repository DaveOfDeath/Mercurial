idRef {
  id: "54bb20eb666538f00e006e83"
}
ui_name: "Underworld93-Aaron"
nodes {
  idRef {
    id: "54bb20f6666538f00e006e89"
  }
  index: 0
  text: "Hoi Chummer!,  I got whatcha need, $(l.man)..."
  branches {
    responseText: "I hear you\'ve managed to  hold back a few backstage passes.  My associates and I find ourselves in need of them...  Perhaps we can strike some sort of arrangement?"
    nextNodeIndex: 1
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "54bb1eed666538f00e006e26"
  }
}
nodes {
  idRef {
    id: "54bb2146666538f00e006e8d"
  }
  index: 1
  text: "I do indeed, Chummer...  Well, what\'re they worth to ya?"
  branches {
    responseText: "{{CC}}[500\302\245]{{/CC}} And I\'ll owe you a favor."
    conditions {
      ops {
        functionName: "Evaluate Nuyen"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 500
        }
      }
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "item_BackStagePasses"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 500
        }
      }
    }
    nextNodeIndex: 2
    hideIfUnavailable: true
  }
  branches {
    responseText: "{{CC}}[1,000\302\245]{{/CC}} I\'ll pay full value."
    conditions {
      ops {
        functionName: "Evaluate Nuyen"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 1000
        }
      }
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "item_BackStagePasses"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 1000
        }
      }
    }
    nextNodeIndex: 7
    hideIfUnavailable: true
  }
  branches {
    responseText: "{{CC}}[1,500\302\245]]{{/CC}} How about you lost them, and forget we ever met?"
    conditions {
      ops {
        functionName: "Evaluate Nuyen"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 1500
        }
      }
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "item_BackStagePasses"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 1500
        }
      }
    }
    nextNodeIndex: 12
    hideIfUnavailable: true
  }
  branches {
    responseText: "Too rich for my blood, I\'ll find another way."
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "item_BackStagePasses"
            }
          }
        }
      }
    }
    nextNodeIndex: 13
    hideIfUnavailable: true
  }
  branches {
    responseText: "Already got what I need, Chummer... Thanks."
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "item_BackStagePasses"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "54bb1eed666538f00e006e26"
  }
}
nodes {
  idRef {
    id: "54bb226b666538f00e006e93"
  }
  index: 2
  text: "{{GM}}He appears to ponder your offer briefly.{{/GM}}\n\nAnd what kinda favors do you think I can\'t handle myself?"
  branches {
    responseText: "Anything that can be handled legally, or you just don\'t need that kinda heat..."
    nextNodeIndex: 3
  }
  branches {
    responseText: "Getting things off the top shelf?"
    nextNodeIndex: 4
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "54bb1eed666538f00e006e26"
  }
}
nodes {
  idRef {
    id: "54c6cbf1666538a00d004b34"
  }
  index: 3
  text: "{{GM}}He perks right up.{{/GM}}\n\nA runner huh?  I\'ll take you up on that.  Never know where a shadowy knife may come in handy..."
  branches {
    responseText: "So we have a deal?"
    nextNodeIndex: 12
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "54bb1eed666538f00e006e26"
  }
}
nodes {
  idRef {
    id: "54bb2420666538f00e006ebb"
  }
  index: 4
  text: "Real fraggin\' funny Chummer.   I\'m thinking my passes are commited elsewhere..."
  branches {
    responseText: "I\'m not the type of person to cross, halfer.   Hand over the passes, or be looking over your shoulder forever."
    nextNodeIndex: 5
  }
  branches {
    responseText: "{{CC}}[250\302\245]{{/CC}} How about I kick it up another 250\302\245?"
    conditions {
      ops {
        functionName: "Evaluate Nuyen"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 250
        }
      }
    }
    nextNodeIndex: 6
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "54bb1eed666538f00e006e26"
  }
}
nodes {
  idRef {
    id: "54c6cc7f666538a00d004b39"
  }
  index: 5
  text: "{{GM}}He swallows hard, and seems to have lost a bit of his nerve.{{/GM}}\n\nSo it\'s like that?   I guess I don\'t need to end up in a ditch somewhere... Take them."
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "54bb1eed666538f00e006e26"
  }
  actions {
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "item_BackStagePasses"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Screen Label"
      args {
        string_value: "Objective"
      }
      args {
        string_value: "Head backstage."
      }
    }
  }
}
nodes {
  idRef {
    id: "54c6ccea666538a00d004b3b"
  }
  index: 6
  text: "Frag off, pal.   Find your own fraggin\' passes."
  branches {
    responseText: "Alright man... can\'t take a joke?   How about you hand them over, before I lose my sense of humor.   You\'d fit nicely in the storm drain out back..."
    nextNodeIndex: 5
    auxiliaryLink: true
  }
  branches {
    responseText: "I\'ll be back..."
    actions {
      ops {
        functionName: "Set Screen Label"
        args {
          string_value: "Objective"
        }
        args {
          string_value: "Find an alternative route to get backstage."
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "54bb1eed666538f00e006e26"
  }
}
nodes {
  idRef {
    id: "54bb2385666538f00e006eb5"
  }
  index: 7
  text: "Must be pretty desperate to get back there... You one of those groupie types with some sort of stalker fantasy for Mecurial?"
  branches {
    responseText: "Whatever gets those passes in my hand, and your mouth shut."
    nextNodeIndex: 8
  }
  branches {
    responseText: "Hardly.   Didn\'t even know he was here until I walked up.   Got a meeting backstage with a fixer.    Need to get back there quickly, and quietly. "
    nextNodeIndex: 9
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "54bb1eed666538f00e006e26"
  }
}
nodes {
  idRef {
    id: "54bb26d2666538f00e006ec6"
  }
  index: 8
  text: "Got a bit of an attitude problem, chummer... I\'m not sure I\'m handing these over... you see I got a rep to protect myself..."
  branches {
    responseText: "What\'s worse, a damaged reputation?   Or a damaged spine?"
    nextNodeIndex: 5
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "54bb1eed666538f00e006e26"
  }
}
nodes {
  idRef {
    id: "54bb2703666538f00e006eca"
  }
  index: 9
  text: "Whoa there, chummer... You\'re a runner?"
  branches {
    responseText: "Yeah, what of it?"
    nextNodeIndex: 10
  }
  branches {
    responseText: "No.   Just a driver."
    nextNodeIndex: 11
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "54bb1eed666538f00e006e26"
  }
}
nodes {
  idRef {
    id: "54c6ce39666538a00d004b49"
  }
  index: 10
  text: "Throw in a favor someday, and you\'ve got a deal."
  branches {
    responseText: "Fine.   Are we agreed?"
    nextNodeIndex: 12
    auxiliaryLink: true
  }
  branches {
    responseText: "The only thing I\'m throwing in is your continued ability to turn oxygen into carbon dioxide.   It\'s a limited time offer though, so what\'ll it be?"
    nextNodeIndex: 5
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "54bb1eed666538f00e006e26"
  }
}
nodes {
  idRef {
    id: "54c6cea2666538a00d004b51"
  }
  index: 11
  text: "Yeah... sure... Alright, Chummer... you wanna play it close to the vest, no problem.   You\'re paying good nuyen for the passes, and I guess I ain\'t got nothing else for ya."
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "54bb1eed666538f00e006e26"
  }
  actions {
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "item_BackStagePasses"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Screen Label"
      args {
        string_value: "Objective"
      }
      args {
        string_value: "Head backstage."
      }
    }
  }
}
nodes {
  idRef {
    id: "54bb229a666538f00e006e95"
  }
  index: 12
  text: "Done."
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "54bb1eed666538f00e006e26"
  }
  actions {
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "item_BackStagePasses"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Screen Label"
      args {
        string_value: "Objective"
      }
      args {
        string_value: "Head backstage."
      }
    }
  }
}
nodes {
  idRef {
    id: "54c6cf06666538a00d004b53"
  }
  index: 13
  text: "Suit yourself, Chummer.   Ain\'t gonna find a couple of these left in a bathroom stall, that\'s for fraggin\' sure."
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "54bb1eed666538f00e006e26"
  }
  actions {
    ops {
      functionName: "Set Screen Label"
      args {
        string_value: "Objective"
      }
      args {
        string_value: "Find an alternative route to get backstage."
      }
    }
  }
}
roots {
  nextNodeIndex: 0
}

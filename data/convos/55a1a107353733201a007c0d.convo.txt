idRef {
  id: "55a1a107353733201a007c0d"
}
ui_name: "LTG - Directory"
nodes {
  idRef {
    id: "55a1a124353733201a007c13"
  }
  index: 0
  text: "With a single flicker of thought, you can jump into the data steam and virtually teleport through in the Matrix, appearing almost anywhere in the world.\n\nAssuming you know where you want to go--and that it\'s connected to the network, natch."
  branches {
    responseText: ""
    nextNodeIndex: 1
  }
  nodeType: ConversationNodeType_GM_Voice
}
nodes {
  idRef {
    id: "55a1a3de353733201a007c17"
  }
  index: 1
  text: ""
  branches {
    responseText: "{{GM}}Lowball Records{{/GM}} Max Foley\'s music biz."
    conditions {
      ops {
        functionName: "Evaluate Goal"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "Hack Max Foley"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Enable/Disable Team\'s Turn"
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "EnableOrDisable"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
      ops {
        functionName: "Teleport Actor near Point"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Actor\'s Persona"
                args {
                  call_value {
                    functionName: "Get Persona\'s Host"
                    args {
                      call_value {
                        functionName: "Triggering Actor"
                      }
                    }
                  }
                }
              }
            }
            args {
            }
          }
        }
        args {
          int_value: 0
        }
        args {
          call_value {
            functionName: "Get Random Point Within Region"
            args {
              call_value {
                functionName: "Get Map Item (Region)"
                args {
                  string_value: "55a8424435373338120014e7"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "FacingDirection"
            }
            args {
              int_value: 5
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "TeleportMethod"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Play FX at Point"
        args {
          string_value: "MatrixESPSpawn"
        }
        args {
          call_value {
            functionName: "Current Location of Actor"
            args {
              call_value {
                functionName: "Last Teleported Persona"
              }
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "{{GM}}Federated Banking{{/GM}} Armando Hernandez\'s bank."
    conditions {
      ops {
        functionName: "Evaluate Goal"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "Hack Federated Banking"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Enable/Disable Team\'s Turn"
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "EnableOrDisable"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
      ops {
        functionName: "Teleport Actor near Point"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Actor\'s Persona"
                args {
                  call_value {
                    functionName: "Get Persona\'s Host"
                    args {
                      call_value {
                        functionName: "Triggering Actor"
                      }
                    }
                  }
                }
              }
            }
            args {
            }
          }
        }
        args {
          int_value: 0
        }
        args {
          call_value {
            functionName: "Get Random Point Within Region"
            args {
              call_value {
                functionName: "Get Map Item (Region)"
                args {
                  string_value: "54e955f0663136c414003b0a"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "FacingDirection"
            }
            args {
              int_value: 7
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "TeleportMethod"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Play FX at Point"
        args {
          string_value: "MatrixESPSpawn"
        }
        args {
          call_value {
            functionName: "Current Location of Actor"
            args {
              call_value {
                functionName: "Last Teleported Persona"
              }
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "{{GM}}New Horizon{{/GM}} Sunnyside real estate developers."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
  }
  branches {
    responseText: "{{GM}}Paradise Gardens{{/GM}} Maria\'s condominium."
    actions {
      ops {
        functionName: "Enable/Disable Team\'s Turn"
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "EnableOrDisable"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
      ops {
        functionName: "Teleport Actor near Point"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Actor\'s Persona"
                args {
                  call_value {
                    functionName: "Get Persona\'s Host"
                    args {
                      call_value {
                        functionName: "Triggering Actor"
                      }
                    }
                  }
                }
              }
            }
            args {
            }
          }
        }
        args {
          int_value: 0
        }
        args {
          call_value {
            functionName: "Get Random Point Within Region"
            args {
              call_value {
                functionName: "Get Map Item (Region)"
                args {
                  string_value: "55a1e088353733201a007dec"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "FacingDirection"
            }
            args {
              int_value: 5
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "TeleportMethod"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Play FX at Point"
        args {
          string_value: "MatrixESPSpawn"
        }
        args {
          call_value {
            functionName: "Current Location of Actor"
            args {
              call_value {
                functionName: "Last Teleported Persona"
              }
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "{{GM}}Pub.Sri{{/GM}} A popular decker hangout."
    actions {
      ops {
        functionName: "Enable/Disable Team\'s Turn"
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "EnableOrDisable"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
      ops {
        functionName: "Teleport Actor near Point"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Actor\'s Persona"
                args {
                  call_value {
                    functionName: "Get Persona\'s Host"
                    args {
                      call_value {
                        functionName: "Triggering Actor"
                      }
                    }
                  }
                }
              }
            }
            args {
            }
          }
        }
        args {
          int_value: 0
        }
        args {
          call_value {
            functionName: "Get Random Point Within Region"
            args {
              call_value {
                functionName: "Get Map Item (Region)"
                args {
                  string_value: "55a31b4a3537330c070043d2"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "FacingDirection"
            }
            args {
              int_value: 5
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "TeleportMethod"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Play FX at Point"
        args {
          string_value: "MatrixESPSpawn"
        }
        args {
          call_value {
            functionName: "Current Location of Actor"
            args {
              call_value {
                functionName: "Last Teleported Persona"
              }
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "{{GM}}Underworld 93{{/GM}} The club where this mess started."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
  }
  branches {
    responseText: "{{GM}}StarKaf{{/GM}} For the virtual caffeine fix."
    actions {
      ops {
        functionName: "Enable/Disable Team\'s Turn"
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "EnableOrDisable"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
      ops {
        functionName: "Teleport Actor near Point"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Actor\'s Persona"
                args {
                  call_value {
                    functionName: "Get Persona\'s Host"
                    args {
                      call_value {
                        functionName: "Triggering Actor"
                      }
                    }
                  }
                }
              }
            }
            args {
            }
          }
        }
        args {
          int_value: 0
        }
        args {
          call_value {
            functionName: "Get Random Point Within Region"
            args {
              call_value {
                functionName: "Get Map Item (Region)"
                args {
                  string_value: "55a2f2ee3537330c07004111"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "FacingDirection"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "TeleportMethod"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Play FX at Point"
        args {
          string_value: "MatrixESPSpawn"
        }
        args {
          call_value {
            functionName: "Current Location of Actor"
            args {
              call_value {
                functionName: "Last Teleported Persona"
              }
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "{{GM}}Bit Store{{/GM}} Seller of holographic code."
    conditions {
      ops {
        functionName: "Evaluate Goal"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "Find a Bit"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Enable/Disable Team\'s Turn"
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "EnableOrDisable"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
      ops {
        functionName: "Teleport Actor near Point"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Actor\'s Persona"
                args {
                  call_value {
                    functionName: "Get Persona\'s Host"
                    args {
                      call_value {
                        functionName: "Triggering Actor"
                      }
                    }
                  }
                }
              }
            }
            args {
            }
          }
        }
        args {
          int_value: 0
        }
        args {
          call_value {
            functionName: "Get Random Point Within Region"
            args {
              call_value {
                functionName: "Get Map Item (Region)"
                args {
                  string_value: "55c6254235373314070006f4"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "FacingDirection"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "TeleportMethod"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Play FX at Point"
        args {
          string_value: "MatrixESPSpawn"
        }
        args {
          call_value {
            functionName: "Current Location of Actor"
            args {
              call_value {
                functionName: "Last Teleported Persona"
              }
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
  }
  branches {
    responseText: "{{GM}}Enter LTG Code{{/GM}}"
    nextNodeIndex: 2
  }
  branches {
    responseText: "{{GM}}Exit Directory{{/GM}}"
    nextNodeIndex: -1
  }
  branches {
    responseText: "{{GM}}Switch Active Actor{{/GM}}"
    conditions {
      ops {
        functionName: "Evaluate Tag for Actor"
        args {
          call_value {
            functionName: "All Actors"
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SenseTagList)"
            args {
              string_value: "isMatrix_Follower"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Trigger: Run Alternate Trigger"
        args {
          call_value {
            functionName: "Get Map Item (Trigger)"
            args {
              string_value: "55a26d253537330c07003d4c"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WaitOrNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
  }
  branches {
    responseText: "{{GM}}Jack-Out{{/GM}}"
    actions {
      ops {
        functionName: "Force-Use Interactable Object (with Actor)"
        args {
          call_value {
            functionName: "Get Map Item (InteractableObject)"
            args {
              string_value: "55a16217353733201a007bdf"
            }
          }
        }
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "{{GM}}Jack-Out Follower{{/GM}}"
    conditions {
      ops {
        functionName: "Evaluate Tag for Actor"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SenseTagList)"
            args {
              string_value: "isMatrix_Leader"
            }
          }
        }
      }
      ops {
        functionName: "Evaluate Tag for Actor"
        args {
          call_value {
            functionName: "All Actors"
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SenseTagList)"
            args {
              string_value: "isMatrix_Follower"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Force-Use Interactable Object (with Actor)"
        args {
          call_value {
            functionName: "Get Map Item (InteractableObject)"
            args {
              string_value: "55a16217353733201a007bdf"
            }
          }
        }
        args {
          call_value {
            functionName: "Nearest Tagged Actor to Actor"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isMatrix_Follower"
                }
              }
            }
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
  }
  nodeType: ConversationNodeType_GM_Voice
}
nodes {
  idRef {
    id: "55a1ac6e353733201a007c61"
  }
  index: 2
  text: "{{GM}}Every SAN on the Matrix has a nine digit LTG code associated with it.{{/GM}}\n\n{{GM}}Enter the code for the SAN, and you will be directed to that node.{{/GM}}"
  branches {
    responseText: "206511082"
    nextNodeIndex: -1
    comment: "Drac\342\200\231s Coffins"
  }
  nodeType: ConversationNodeType_InputKeyboard
  inputMaxLength: 9
}
nodes {
  idRef {
    id: "55a1a52a353733201a007c1e"
  }
  index: 3
  text: "With a single flicker of thought, a persona can jump into the data steam and virtually teleport through in the Matrix, appearing almost anywhere in the world.\n\nAssuming they know where they want to go--and that it\'s connected to the network, natch."
  branches {
    responseText: ""
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_GM_Voice
}
nodes {
  idRef {
    id: "55a1a52a353733201a007c1e"
  }
  index: 4
  text: "With a single flicker of thought, a persona can jump into the data steam and virtually teleport through in the Matrix, appearing almost anywhere in the world.\n\nAssuming they know where they want to go--and that it\'s connected to the network, natch."
  branches {
    responseText: ""
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_GM_Voice
}
nodes {
  idRef {
    id: "55a1a52a353733201a007c1e"
  }
  index: 5
  text: "With a single flicker of thought, a persona can jump into the data steam and virtually teleport through in the Matrix, appearing almost anywhere in the world.\n\nAssuming they know where they want to go--and that it\'s connected to the network, natch."
  branches {
    responseText: ""
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_GM_Voice
}
roots {
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isMatrixNebel"
          }
        }
      }
    }
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isMatrixSilverArrow"
          }
        }
      }
    }
  }
  nextNodeIndex: 0
  comment: "Intended for PC0"
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isMatrixNebel"
          }
        }
      }
    }
  }
  nextNodeIndex: 3
  comment: "Intended for Nebel"
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isMatrixSilverArrow"
          }
        }
      }
    }
  }
  nextNodeIndex: 4
  comment: "Intended for Silver Arrow"
}
roots {
  responseText: ""
  nextNodeIndex: 5
  comment: "Failsafe"
}

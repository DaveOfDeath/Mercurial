idRef {
  id: "54f0b42a61313130170019b3"
}
ui_name: "LTG - Jingoistic"
nodes {
  idRef {
    id: "554039d76631364807005a54"
  }
  index: 0
  text: "$(story.str_NPCIntroText)"
  branches {
    responseText: "Jingoistic?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "bool_Jingoistic"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "str_NPCIntroText"
            }
          }
        }
        args {
          string_value: "Jingoistic smiles, and nods. \"Jingoistic is an old term, it means \'aggressive and warlike foreign policy.\' It describes the foreign policy of pretty much every nation since the fall of the old USofA.\"\n\n\"Before you get any ideas, it\'s a screen name, not my real name. My friends call me Ingo.\""
        }
      }
    }
    nextNodeIndex: 0
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "559c5e936131318400003da4"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "What is this place?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "bool_Jingoistic"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "str_NPCIntroText"
            }
          }
        }
        args {
          string_value: "\"This,\" Ingo says, gesturing at the virtual room around you, \"Is my corner of the matrix, a little place we call the Pub. Runners, deckers, and wannabes come hang out here, get a drink and chat.\"\n\n\"There are a few like it out there- Erehwon out in the NAN, one in Chicago, one in Hong Kong, another in London, but this one is mine.\""
        }
      }
    }
    nextNodeIndex: 0
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "559c5df16131318400003d9a"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Drink?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "bool_Jingoistic"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "str_NPCIntroText"
            }
          }
        }
        args {
          string_value: "Ingo smiles, \"Yeah, it\'s a little trick they came up with out at Erehwon, they manipulate your brain signal the same way a simsense feed does, makes you feel high, drunk, or whatever you want, with no fear of hangover.\""
        }
      }
    }
    nextNodeIndex: 0
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "559c5fb06131318400003da8"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "There\'s no downside to digital beverages?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "bool_Jingoistic"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "str_NPCIntroText"
            }
          }
        }
        args {
          string_value: "Ingo shakes his head \"The program messes with your brainwaves, $(s.man), of course there\'s a danger.\"\n\n\"Even if you totally trust the programmer, they might make a mistake- a bit or byte in the wrong place, and that datapulse might scramble your brain.\"\n\n\"Even if they do their job perfectly, who knows what subroutine a wageslave coder will be forced to put in- An addiction to their product? A sense of brand loyalty? I stick to the information and camraderie, but customers ask for it, so I supply product as safe as I can get.\""
        }
      }
    }
    nextNodeIndex: 0
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "559c60e36131318400003daf"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "What\'s that datafeed on the wall?"
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "str_NPCIntroText"
            }
          }
        }
        args {
          string_value: "Ingo looks at the wall behind him, and nods, evidently proud of his work. \n\n\"That datafeed is a vanishing SAN that connects the well-informed to the Shadowland data haven. Our traffic has been way down since someone cut the local Trunk line, but we still have a connection to Shadowland through... alternative routes.\""
        }
      }
    }
    nextNodeIndex: 1
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "559c5df66131318400003d9b"
    }
  }
  branches {
    responseText: "Give me a beer."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "bool_Jingoistic"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "str_NPCIntroText"
            }
          }
        }
        args {
          string_value: "Ingo looks at you quizzically, and says \"Kid, this is a fine establishement, and we have the entirety of human experience here to draw from.\"\n\n\"If you want a soybeer, go to Stuffer Shack and pick one up. If you want to drink here, I humbly suggest you try something that you might never otherwise experience in your life, like the Glenlivet 21 Year Old Archive. Rich chocolate, full malt, citrus, sherry and light smoky note. Even a hint of rum? It\'s like liquid gold.\""
        }
      }
    }
    nextNodeIndex: 0
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "559c8be36131318400003e16"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Give me a scotch."
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "str_NPCIntroText"
            }
          }
        }
        args {
          string_value: "Ingo lifts a finger to correct you \"Not A scotch, but THE scotch, the only things I\'ll serve; and since you\'re enjoying the digital variety, you\'ll get to enjoy drunken oblivion without a hint of a hangover in real life afterwards.\"\n\n\"One glass of Glenlivet 21 year old Archive, coming up!\""
        }
      }
      ops {
        functionName: "Play Animation From Manifest"
        args {
          call_value {
            functionName: "Nearest Tagged Actor to Actor"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isMatrix_Leader"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Map Item (Actor)"
                args {
                  string_value: "54f0a5b36131313017001964"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Animation)"
            args {
              string_value: "Seattle:General/decking_dizzy_dumpshock"
            }
          }
        }
      }
    }
    nextNodeIndex: 0
    hideIfUnavailable: true
    auxiliaryLink: true
  }
  branches {
    responseText: "Give me one of your custom uppers."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_Augmented"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "str_NPCIntroText"
            }
          }
        }
        args {
          string_value: "\"Okay, so these are a little something that I picked up and modified, so they might have side effects. This one is based on some brainwaves of Alan Turing\'s brain, so you might feel a little ...queer, but it\'ll get you up and running.\"\n\n\"Try not to make any rash life decisions for the next 24 hours, okay? Sleep it off when you\'re done decking for the night.\""
        }
      }
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_Augmented"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "eDigitalHyper"
            }
          }
        }
      }
    }
    nextNodeIndex: 0
    hideIfUnavailable: true
    auxiliaryLink: true
  }
  branches {
    responseText: "Thanks for the drink, and tour. {{CC}}Leave{{/CC}}"
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "bool_Jingoistic"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "No Effect"
    }
  }
  comment: "Ingo Loop"
}
nodes {
  idRef {
    id: "559c5fb46131318400003daa"
  }
  index: 1
  text: "$(story.str_NPCIntroText)"
  branches {
    responseText: "What is a data haven?"
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "str_NPCIntroText"
            }
          }
        }
        args {
          string_value: "Ingo nods for a while \"A data haven is like a library for illicit information. If there\'s a news story that a corporation wants to silence, or some stolen data that The Man doesn\'t want you to get your hands on--  it\'ll go into a Data Haven, which will store and protect the information, make sure it gets out to the people who want to know.\"\n\n\"It\'s a place for the runners around the world to collaborate and share information. If you\'re good enough to get in, you\'re good enough to contribute.\""
        }
      }
    }
    nextNodeIndex: 1
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "559c631a6131318400003de7"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "What is Shadowland?"
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "str_NPCIntroText"
            }
          }
        }
        args {
          string_value: "\"Shadowland is the best of the best- our local hometown team. It\'s a Data Haven run by Captain Chaos, and it struggles to keep the world true and the lights on.\"\n\n\"It\'s not the largest- the Nexus has that distinction, but it\'s local and I think it\'s the best. Enough so that I convinced the Captain to give us one of the vanishing SANs for access.\""
        }
      }
    }
    nextNodeIndex: 1
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "559c631d6131318400003de8"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "How did you get the connection here?"
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "str_NPCIntroText"
            }
          }
        }
        args {
          string_value: "\"A connection to Shadowland is not an easy thing to get. You have to go out into the matrix, and find it. You have to prove yourself worthy to get in.\"\n\n\"A few of us put the connection out, so when the vanishing SAN moves, the old friends know a couple places to check it out. This is one of those.\"\n\n\"You\'d have to be a pretty hot decker to make your own connection, and even then you\'d have to get permission from the Haven to have the connection. I can\'t imagine what level of trust they\'d have to have in you.\""
        }
      }
    }
    nextNodeIndex: 1
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "559c7b8a6131318400003df6"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Who is Captain Chaos?"
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "str_NPCIntroText"
            }
          }
        }
        args {
          string_value: "\"Captain Chaos is the grandfather of the Matrix. Sure, corporations built it after the Crash of the Internet and the old system of computers, but us deckers gave it life.\"\n\n\"Captain Chaos was one of the first in that first generation, who wanted to pass on the hacker legacy to us kid \'deckers,\' and teach us how the world worked while corporations and governments were lying to us. He\'s as close to a hero as I have.\""
        }
      }
    }
    nextNodeIndex: 1
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "559c876b6131318400003df9"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "What other data havens can you tell me about?"
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "str_NPCIntroText"
            }
          }
        }
        args {
          string_value: "\"I already mentioned Shadowland, which is the best of the data havens in my humble opinion. Nexus is the first of the data havens, out of an old Air Force base in Denver. I don\'t know why no corporation has wiped it out, but they haven\'t-- or can\'t, and so it remains as the largest storage of information anywhere in the world- free of the editorial touches of the corporate world.\"\n\n\"You have Asgard, the digital auction house in the sky; Azziewatch, which concerns itself with all things Texas and Aztechnology; The Morgue, which is the seedy underbelly of the largest corproate data mine on the planet; and Manchester, the anti-Tir and anti-facist datahaven in Londonsprawl.\"\n\n\"There\'s probably one or two more I forgot out there, but those are the ones I know of.\""
        }
      }
    }
    nextNodeIndex: 1
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "559c63206131318400003de9"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "That\'s great, but I just wanted a drink."
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "542848a8633464d816001ad5"
            }
            args {
              string_value: "str_NPCIntroText"
            }
          }
        }
        args {
          string_value: "Ingo shrugs, \"No one is stopping you from getting anyting, what can I get for you?\""
        }
      }
    }
    nextNodeIndex: 0
    hideIfUnavailable: true
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  comment: "Data Havens Loop"
}
roots {
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "542848a8633464d816001ad5"
          }
          args {
            string_value: "str_NPCIntroText"
          }
        }
      }
      args {
        string_value: "The young man behind the counter pauses in his ministrations, and turns to face you.\n\n\"Greetings new user, I\'m Jingoistic, and I\'ll be your admin today. Welcome to the Pub.\""
      }
    }
  }
  nextNodeIndex: 0
}

triggers {
  name: "---=== Generic Triggers ===---"
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "54f12044663136dc1600230f"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Generic.MapLoad"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isFlashLight"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isDrunk"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "54f23abe6631369414002249"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54f1202d663136dc1600230d"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "   StealthApproach"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
          }
          args {
            string_value: "str_SpawnPoint"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "HERNANDEZ-STEALTH"
      }
    }
  }
  actions {
    ops {
      functionName: "Set Ambient Light Color"
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        call_value {
          functionName: "Get Map Item (CameraRegion)"
          args {
            string_value: "54362450373361140a0066e3"
          }
        }
      }
    }
    ops {
      functionName: "Set Directional Light Color"
      args {
        float_value: 85
      }
      args {
        float_value: 0
      }
      args {
        float_value: 227
      }
      args {
        float_value: 255
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        call_value {
          functionName: "Get Map Item (CameraRegion)"
          args {
            string_value: "54362450373361140a0066e3"
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isDrunk"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isLight"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "54f23abe6631369414002249"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Specified Point (3D)"
          args {
            float_value: -13.8
          }
          args {
            float_value: 0.3
          }
          args {
            float_value: 29.7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "54f22ecc6631369414002233"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54f22d366631369414002230"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "   ConfontationApproach"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
          }
          args {
            string_value: "str_SpawnPoint"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "HERNANDEZ-CONFRONT"
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "54f23a876631369414002247"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Specified Point (2D)"
          args {
            float_value: -30
          }
          args {
            float_value: -12
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54f22d3b6631369414002231"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Generic.GoUpStairs"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "54f11db5663136dc16002303"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Fade Camera Out"
      args {
        float_value: 0.25
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "props"
          }
          args {
            string_value: "LadderClimb"
          }
        }
      }
      args {
        float_value: 6
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eGoUpstairs"
          }
        }
      }
      args {
        float_value: 0.25
      }
    }
  }
  isActive: true
  idRef {
    id: "54f12131663136dc16002314"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "   Stairs.RefocusCamera [UP]"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eGoUpstairs"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "54f121c9663136dc16002317"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
    }
    ops {
      functionName: "Fade Camera In"
      args {
        float_value: 0.25
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "props"
          }
          args {
            string_value: "LadderClimb"
          }
        }
      }
      args {
        float_value: 5
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54f1222d663136dc16002318"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Generic.GoDownStairs"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "54f11ddf663136dc16002305"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Fade Camera Out"
      args {
        float_value: 0.25
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "props"
          }
          args {
            string_value: "LadderClimb"
          }
        }
      }
      args {
        float_value: 6
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eGoDownstairs"
          }
        }
      }
      args {
        float_value: 0.25
      }
    }
  }
  isActive: true
  idRef {
    id: "54f122b8663136dc16002319"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "   Stairs.RefocusCamera [DN]"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eGoDownstairs"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "54f121a4663136dc16002316"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
    }
    ops {
      functionName: "Fade Camera In"
      args {
        float_value: 0.25
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "props"
          }
          args {
            string_value: "LadderClimb"
          }
        }
      }
      args {
        float_value: 5
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54f122b8663136dc1600231a"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "General.ActivateFlashLight"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "54f22ecc6631369414002233"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bFlashLight_On"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "Berlin:cyberware"
          }
          args {
            string_value: "Cyberware_Electronic_On"
          }
        }
      }
      args {
        float_value: 5
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bFlashLight_On"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eFlashLight"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54f224a6663136941400222e"
  }
  elseActions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "Berlin:cyberware"
          }
          args {
            string_value: "Cyberware_Electronic_Off"
          }
        }
      }
      args {
        float_value: 5
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bFlashLight_On"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isFlashLight"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "General.SceneTransition"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "54f27a8b66313664000033c3"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "542848a8633464d816001ad5"
          }
          args {
            string_value: "int_Hideout"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Open Scene"
      args {
        call_value {
          functionName: "Get Map Item (Scene)"
          args {
            string_value: "HUB - Doghouse"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54f27dca66313664000033ca"
  }
  elseActions {
    ops {
      functionName: "Open Scene"
      args {
        call_value {
          functionName: "Get Map Item (Scene)"
          args {
            string_value: "HUB - Penthouse"
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: ""
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "54f12042663136dc1600230e"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "---=== Flashlight Triggers ===---"
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "54f12061663136dc16002310"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "FlashLight.GetDirection"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eFlashLight"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bFlashLight_On"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iDirection"
          }
        }
      }
      args {
        call_value {
          functionName: "Current Rotation of Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isFlashLight"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54f221b46631369414002223"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "  FlashLight.Offset [0]"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eFlashLight"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iDirection"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  actions {
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "54f12026663136dc1600230c"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (Point)"
          args {
            call_value {
              functionName: "Current Location of Actor"
              args {
                call_value {
                  functionName: "Get Map Item (Player)"
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Specified Point (3D)"
              args {
                float_value: 0
              }
              args {
                float_value: 0
              }
              args {
                float_value: 2
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54f222056631369414002224"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "  FlashLight.Offset [1]"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eFlashLight"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iDirection"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "54f12026663136dc1600230c"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (Point)"
          args {
            call_value {
              functionName: "Current Location of Actor"
              args {
                call_value {
                  functionName: "Get Map Item (Player)"
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Specified Point (3D)"
              args {
                float_value: 1.5
              }
              args {
                float_value: 0
              }
              args {
                float_value: 1.5
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54f2231c6631369414002226"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "  FlashLight.Offset [2]"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eFlashLight"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iDirection"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  actions {
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "54f12026663136dc1600230c"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (Point)"
          args {
            call_value {
              functionName: "Current Location of Actor"
              args {
                call_value {
                  functionName: "Get Map Item (Player)"
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Specified Point (3D)"
              args {
                float_value: 2
              }
              args {
                float_value: 0
              }
              args {
                float_value: 0
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54f2231d6631369414002227"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "  FlashLight.Offset [3]"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eFlashLight"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iDirection"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 3
      }
    }
  }
  actions {
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "54f12026663136dc1600230c"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (Point)"
          args {
            call_value {
              functionName: "Current Location of Actor"
              args {
                call_value {
                  functionName: "Get Map Item (Player)"
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Specified Point (3D)"
              args {
                float_value: 1.5
              }
              args {
                float_value: 0
              }
              args {
                float_value: -1.5
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54f2231f6631369414002228"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "  FlashLight.Offset [4]"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eFlashLight"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iDirection"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 4
      }
    }
  }
  actions {
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "54f12026663136dc1600230c"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (Point)"
          args {
            call_value {
              functionName: "Current Location of Actor"
              args {
                call_value {
                  functionName: "Get Map Item (Player)"
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Specified Point (3D)"
              args {
                float_value: 0
              }
              args {
                float_value: 0
              }
              args {
                float_value: -2
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54f223236631369414002229"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "  FlashLight.Offset [5]"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eFlashLight"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iDirection"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 5
      }
    }
  }
  actions {
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "54f12026663136dc1600230c"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (Point)"
          args {
            call_value {
              functionName: "Current Location of Actor"
              args {
                call_value {
                  functionName: "Get Map Item (Player)"
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Specified Point (3D)"
              args {
                float_value: -1.5
              }
              args {
                float_value: 0
              }
              args {
                float_value: -1.5
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54f22323663136941400222a"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "  FlashLight.Offset [6]"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eFlashLight"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iDirection"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 6
      }
    }
  }
  actions {
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "54f12026663136dc1600230c"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (Point)"
          args {
            call_value {
              functionName: "Current Location of Actor"
              args {
                call_value {
                  functionName: "Get Map Item (Player)"
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Specified Point (3D)"
              args {
                float_value: -2
              }
              args {
                float_value: 0
              }
              args {
                float_value: 0
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54f22323663136941400222b"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "  FlashLight.Offset [7]"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eFlashLight"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iDirection"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 7
      }
    }
  }
  actions {
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "54f12026663136dc1600230c"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (Point)"
          args {
            call_value {
              functionName: "Current Location of Actor"
              args {
                call_value {
                  functionName: "Get Map Item (Player)"
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Specified Point (3D)"
              args {
                float_value: -1.5
              }
              args {
                float_value: 0
              }
              args {
                float_value: 1.5
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54f22323663136941400222c"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "FlashLight.Update"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eFlashLight"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bFlashLight_On"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eFlashLight"
          }
        }
      }
      args {
        float_value: 0.06
      }
    }
  }
  isActive: true
  idRef {
    id: "54f22450663136941400222d"
  }
  elseActions {
  }
  is_oneshot: false
}
regions {
  name: "cHernandez"
  position {
    x: -40
    y: -24
    width: 61
    height: 72
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "54362450373361140a0066e3"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0
    g: 0.086274512
    b: 0.12941177
    a: 1
  }
  ambient_light_color {
    r: 0
    g: 0.17647059
    b: 0.25882354
    a: 1
  }
  ambience_template: "barrens-night"
  combat_music: "Seattle-Set9-Combat"
  default_music: "Seattle-Set7-Stealth"
  loop_combat_music: true
  loop_default_music: true
  no_fow_in_region: false
}
regions {
  name: "rPlayerStart"
  position {
    x: 12
    y: -17
    width: 4
    height: 4
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "54f11c8f663136dc16002301"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "rDownstairs"
  position {
    x: 0
    y: -18
    width: 3
    height: 3
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "54f121a4663136dc16002316"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "rUpstairs"
  position {
    x: -7
    y: 30
    width: 3
    height: 3
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "54f121c9663136dc16002317"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "rFlashLightActivate"
  position {
    x: 6
    y: -19
    width: 1
    height: 6
  }
  enabledAtStart: false
  is_camera_region: false
  idRef {
    id: "54f22ecc6631369414002233"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 13
    y: 0
    z: -16
  }
  orientation: ORIENTATION_N
  idRef {
    id: "54362451373361140a006876"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 0
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -12
    y: 0
    z: 11
  }
  orientation: ORIENTATION_S
  displayName: "Sober"
  idRef {
    id: "54f23a876631369414002247"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    prerequisites {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bFlashLight_On"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    interactionIcon: InteractionIcon_Conversation
    interaction_info_text: "Talk to Hernandez"
  }
  lod: 0
  character_instance {
    prefab_name: "Story/MrJohnson"
    character_sheet_id: "Lvl2_Merc_Human_Assassin"
    character_mod {
      stats {
        body: -1
        quickness: -1
        strength: 1
        charisma: 1
        intelligence: 1
        willpower: -1
        essence: 0
        magic: -6
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 1
        close_combat: -1
        throwing_weapons: -2
        spellcasting: 0
        decking: 2
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 2
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 6
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 2
        etiquette_academic: 0
      }
      specializations {
        pistol: 1
        rifle: 0
        shotgun: 2
        smg: -1
        edged: -1
        unarmed: 1
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Pi 1 Fichetti Security 500"
    }
    equipment {
      prefab_name: "Sh 3 Defiance T-250"
    }
    team_id: "Civilians"
    char_name: "Armando Hernandez"
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    portrait {
      filename: "backer_humanmale_evanjameshawco"
    }
    description_bio: ""
    portrait_code_override: "s4h1c4"
    karma: 2
    hiring_cost_override: 1500
    hiring_tag: "Assassin"
    is_backer: true
    id: "sc_hernandez"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -11.8
    y: 0.3
    z: 12.7
  }
  orientation: ORIENTATION_S
  displayName: "Drunk"
  idRef {
    id: "54f23abe6631369414002249"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    prerequisites {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bFlashLight_On"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    interactionIcon: InteractionIcon_Conversation
    interaction_info_text: "Talk to Hernandez?"
  }
  lod: 0
  character_instance {
    prefab_name: "Story/MrJohnson"
    character_sheet_id: "Lvl2_Merc_Human_Assassin"
    character_mod {
      stats {
        body: -1
        quickness: -1
        strength: 1
        charisma: 1
        intelligence: 1
        willpower: -1
        essence: 0
        magic: -6
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 1
        close_combat: -1
        throwing_weapons: -2
        spellcasting: 0
        decking: 2
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 2
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 6
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 2
        etiquette_academic: 0
      }
      specializations {
        pistol: 1
        rifle: 0
        shotgun: 2
        smg: -1
        edged: -1
        unarmed: 1
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Pi 1 Fichetti Security 500"
    }
    equipment {
      prefab_name: "Sh 3 Defiance T-250"
    }
    team_id: "Civilians"
    char_name: "Armando Hernandez"
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    portrait {
      filename: "backer_humanmale_evanjameshawco"
    }
    description_bio: ""
    portrait_code_override: "s4h1c4"
    karma: 2
    hiring_cost_override: 1500
    hiring_tag: "Assassin"
    is_backer: true
    is_prop_character: true
    persistent_body: true
    id: "sc_hernandez"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "iDirection"
    typeName: "int"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "bFlashLight_On"
    typeName: "bool"
  }
}
mapEvents: "eGoUpstairs"
mapEvents: "eGoDownstairs"
mapEvents: "eFlashLight"
worldMapLocation {
  filename: ""
  location {
    x: 0
    y: 0
  }
}
mapName: "SCENE - Hernandez Office"
parentStory: ""
scene_title: "$(story.str_SceneTitle)"
scene_subtitle: ""
scene_synopsis: "$(story.str_SceneDetails)"
scene_image: ""
scene_continue_button_skip: false
scene_restore_runner_health: false
directional_light_dir {
  x: -0.5
  y: -1
  z: -0.75
}
directional_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
ambient_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
allow_drawn_weapons: false
team_affiliations {
  team_name: "Shadowrunners"
  affiliation: 0
  affiliation: 1
  affiliation: 1
  affiliation: 0
}
team_affiliations {
  team_name: "Gangers"
  affiliation: 1
  affiliation: 0
  affiliation: 1
  affiliation: 0
}
team_affiliations {
  team_name: "LoneStar"
  affiliation: 1
  affiliation: 1
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Civilians"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
scene_dimensions {
  dimension_name: "Default"
}
character_roster {
}
show_hiring_screen_on_scene_load: false
scene_hiring_prerequisites {
  prereq_description: ""
  prereq_conditions {
  }
}
hiring_slot_count: 0
hiring_minimum_karma: 0
hiring_maximum_karma: 0
roster_overrides {
}
use_hiring_cost_warning: false
hiring_average_cost: 0
override_hiring_average_cost: false
show_equip_screen_on_scene_load: false
is_persistant: false
is_persistant_has_value: false
can_move_outside_camera_regions: false
can_start_before_triggers: true
can_use_team_advancement: false

triggers {
  name: "--=== Global Triggers ===--"
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "5493b09b666538100a000463"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Global.PlayerSurvival"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "You\'ve been killed..."
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5493b096666538100a000462"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Global.MercurialSurvival"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "549311c06665387404005996"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Protect Mercurial"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5493b0e1666538100a000465"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Global.WeaponsVendor"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "555d225a6131317c1e0033b4"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Open Store Screen From Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "555d225a6131317c1e0033b5"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "556945e6663136ac0a00379b"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: ""
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "5493b09f666538100a000464"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "--=== Exterior Story Triggers ===--"
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "54931948666538480b000826"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Exterior.MapLoad"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Actor Unkillable"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Screen Label"
      args {
        string_value: "Location"
      }
      args {
        string_value: "Yoshiros Restaurant"
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "55186566663136c411002611"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "preen"
          }
          args {
            string_value: "preen"
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "55186566663136c411002611"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "preen"
          }
          args {
            string_value: "preen"
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "55186566663136c411002611"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "preen"
          }
          args {
            string_value: "preen"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "542848a8633464d816001ad5"
          }
          args {
            string_value: "int_NPC_Status_Foley"
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Enable/Disable Team\'s Turn"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "553274aa663136cc010059c1"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "549311956665387404005995"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5493196f666538480b000827"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Exterior.InteractWithDave"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "545825a46665382c0f0018f9"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "555800c4613131740a006be4"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "545825a46665382c0f0018f9"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "545825a46665382c0f0018f9"
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Meet Dave"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54583dbe666538b00a00323d"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Exterior.MaxMovesOff"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eMaxLeaves"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Order Actor to Move To (Region)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "549311956665387404005995"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5493a0d2666538100a00037f"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Suspend Team\'s Turn"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 2
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Autosave Game"
    }
    ops {
      functionName: "Trigger: Wait for Rounds"
      args {
        int_value: 1
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5493a100666538100a000380"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Exterior.MaxTaxiCab"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5493a0d2666538100a00037f"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "549311956665387404005995"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Force-Use Interactable Object (with Actor)"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5493a172666538100a000383"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "549311956665387404005995"
          }
        }
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "549311956665387404005995"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "Okay, thanks, I\'ll talk to you later."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 255
      }
      args {
        float_value: 0
      }
      args {
        float_value: 128
      }
      args {
        float_value: 9
      }
      args {
        float_value: 3
      }
      args {
        float_value: 2
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "549311956665387404005995"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "preen"
          }
          args {
            string_value: "preen"
          }
        }
      }
    }
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5493a0d2666538100a00037f"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "549311956665387404005995"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Seattle:General/standing_idle_preen"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5493a130666538100a000381"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Exterior.DancesWithTraffic"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "552940cf663136540600494e"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "55186934663136c411002645"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "55186566663136c411002611"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "552940fc6631365406004950"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Exterior.SwitchMaria"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Change Actor Control"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "549311c06665387404005996"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PlayerOrAI"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "549311c06665387404005996"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "556970d5663136240d0020d7"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: ""
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "54b1658b6665382009000dc5"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "--=== Memphis Motors Triggers ===--"
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "54b1658b6665382009000dc6"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "MemphisMotors.CallButton"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "54934d6b666538480b00096f"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_MemphisGirl"
          }
        }
      }
      args {
        call_value {
          functionName: "Random (int)"
          args {
            int_value: 1
          }
          args {
            int_value: 3
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54934f4f666538480b000977"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "  Girl-1  (Candy)"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "54934d6b666538480b00096f"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_MemphisGirl"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "str_MemphisOpener"
          }
        }
      }
      args {
        string_value: "Memphis Motors... How may I direct your call?"
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "54935090666538480b00097e"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "54934ede666538480b000974"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54934f92666538480b000978"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "  Girl-2  (Dakota)"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "54934d6b666538480b00096f"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_MemphisGirl"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "str_MemphisOpener"
          }
        }
      }
      args {
        string_value: "Memphis Motors...   May I ask the nature of your visit today?"
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "54935090666538480b00097e"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "54934d88666538480b000970"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5493502f666538480b00097c"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "  Girl-3  (Raelee)"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "54934d6b666538480b00096f"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_MemphisGirl"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 3
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "str_MemphisOpener"
          }
        }
      }
      args {
        string_value: "Thank you for chosing Memphis Motors.   How may I help you?"
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "54935090666538480b00097e"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "54934d8d666538480b000972"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54935031666538480b00097d"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: ""
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "54b1662b6665382009000dc9"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "--=== Exterior Triggers ===--"
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "54b1662b6665382009000dca"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Runner.CreateRunners"
  events {
    ops {
      functionName: "On Region Exit"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5493b424666538100a000469"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5493b424666538100a000469"
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eSummonRunners"
          }
        }
      }
    }
    ops {
      functionName: "Interrupt Team\'s Movement"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Camera Point of Interest (Point)"
      args {
        call_value {
          functionName: "Specified Point (2D)"
          args {
            float_value: 52
          }
          args {
            float_value: -11.3
          }
        }
      }
      args {
        float_value: 1
      }
    }
  }
  isActive: true
  idRef {
    id: "5493b451666538100a00046a"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Runner.RunnersMoveIntoPlace"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eSummonRunners"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (float)"
      args {
        call_value {
          functionName: "Point Component (float)"
          args {
            call_value {
              functionName: "Current Location of Prop"
              args {
                call_value {
                  functionName: "Get Map Item (Prop)"
                  args {
                    string_value: "5493a6dc666538100a0003ee"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "VectorComponent"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        float_value: 52
      }
    }
  }
  actions {
    ops {
      functionName: "Move Prop with Speed"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5493a6dc666538100a0003ee"
          }
        }
      }
      args {
        call_value {
          functionName: "Specified Point (2D)"
          args {
            float_value: 52
          }
          args {
            float_value: -11.3
          }
        }
      }
      args {
        float_value: 20
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eSummonRunners"
          }
        }
      }
      args {
        float_value: 0.08
      }
    }
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5493b424666538100a000469"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5493b1d3666538100a000466"
  }
  elseActions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "props"
          }
          args {
            string_value: "MetalScrape1"
          }
        }
      }
      args {
        float_value: 8
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "props"
          }
          args {
            string_value: "DoorSlide"
          }
        }
      }
      args {
        float_value: 6
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5493b1d3666538100a000466"
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isRunner"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5493b2e9666538100a000467"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5493b424666538100a000469"
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "Runner.RunnersSpeak"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5493b2e9666538100a000467"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isRunner"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add Camera Point of Interest (Actors)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        float_value: 2
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "There she is... get them!"
      }
      args {
        float_value: 255
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 128
      }
      args {
        float_value: 7
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isRunner"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isRunner"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Suspend Team\'s Turn"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        int_value: 1
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5493b32c666538100a000468"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "545825a46665382c0f0018f9"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Seattle:General/standing_idle_cower"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5493b32c666538100a000468"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "     Runner.Hurt"
  events {
    ops {
      functionName: "On Actor Damage"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HPOrAP"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isRunner"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_RandomChat"
          }
        }
      }
      args {
        call_value {
          functionName: "Random (int)"
          args {
            int_value: 1
          }
          args {
            int_value: 10
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5591d7443231379c1c00344c"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5591d7eb3231379c1c00344d"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5591d7f43231379c1c00344e"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5591d7f43231379c1c00344f"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5591d7fb3231379c1c003450"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5591d7fb3231379c1c003451"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5591d7fb3231379c1c003452"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5591d7fb3231379c1c003453"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5591d8023231379c1c003454"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5591d8023231379c1c003455"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5591d6a53231379c1c00344b"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "          Chat.01"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_RandomChat"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isRunner"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Random Actor on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "Where the drek is our backup?"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0.1
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "5591d7443231379c1c00344c"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "          Chat.02"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_RandomChat"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isRunner"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Random Actor on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "It wasn\'t supposed to happen this way!"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0.1
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "5591d7eb3231379c1c00344d"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "          Chat.03"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_RandomChat"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 3
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isRunner"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Random Actor on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "Drek! So much for Plan C!"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0.1
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "5591d7f43231379c1c00344e"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "          Chat.04"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_RandomChat"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 4
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isRunner"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Random Actor on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "You got blood on my suit!"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0.1
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "5591d7f43231379c1c00344f"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "          Chat.05"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_RandomChat"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 5
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isRunner"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Random Actor on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "Those fraggin\' gangers are late!"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0.1
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "5591d7fb3231379c1c003450"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "          Chat.06"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_RandomChat"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 6
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isRunner"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Random Actor on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "Great! Our bowling team is going to suck now!"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0.1
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "5591d7fb3231379c1c003451"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "          Chat.07"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_RandomChat"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 7
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isRunner"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Random Actor on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "This isn\'t looking too good."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0.1
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "5591d7fb3231379c1c003452"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "          Chat.08"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_RandomChat"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 8
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isRunner"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Random Actor on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "Get those fraggin\' gangers in here! NOW!"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0.1
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "5591d7fb3231379c1c003453"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "          Chat.09"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_RandomChat"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 9
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isRunner"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Random Actor on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "But... the shaman gave us a good blessing before this run..."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0.1
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "5591d8023231379c1c003454"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "          Chat.10"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_RandomChat"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 10
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isRunner"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Random Actor on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "Fuck! I forgot my medkit!"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0.1
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "5591d8023231379c1c003455"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Combat.Start"
  events {
    ops {
      functionName: "On Turn Mode Enter"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Team\'s Turn"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "559aba7d323137581c004c2c"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "     Wave.Count"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Turn Mode"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TurnBasedOrFreeMove"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_Waves"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        int_value: 4
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_Waves"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eWaves"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5591d0003231379c1c003447"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "          Wave.1"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eWaves"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_Waves"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5591cd2c3231379c1c003437"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5591cf463231379c1c00343f"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5591cdd63231379c1c003438"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5591cf733231379c1c003443"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5591ce163231379c1c00343b"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5591cf5b3231379c1c003440"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isWave1"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isWave1"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5591d0453231379c1c003448"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "          Wave.2"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eWaves"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_Waves"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 3
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5591cdeb3231379c1c003439"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5591cf813231379c1c003444"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5591ce083231379c1c00343a"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5591cf6b3231379c1c003442"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5591ce3c3231379c1c00343c"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5591cf643231379c1c003441"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isWave2"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isWave2"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5591d4843231379c1c003449"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "          Wave.3"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eWaves"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_Waves"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 4
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5591ce413231379c1c00343d"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5591cf933231379c1c003445"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5591ce963231379c1c00343e"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5591cf983231379c1c003446"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isWave3"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isWave3"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5591d4a43231379c1c00344a"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Runner.Dead"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isRunner"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_RunnerDead"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "559aaba4323137581c004c2b"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5493ab97666538100a0003f5"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "     Runner.EnableSearch"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_RunnerDead"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 3
      }
    }
  }
  actions {
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5493ad4a666538100a0003f8"
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5493a72b666538100a0003ef"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5493ad4a666538100a0003f8"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "559aaba4323137581c004c2b"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Runner.SearchMike"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5493ad4a666538100a0003f8"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Team Survival Percentage"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 100
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Clear Waypoint from Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5493ad4a666538100a0003f8"
          }
        }
      }
    }
    ops {
      functionName: "Display Text In Popup"
      args {
        string_value: "TO: Mike\nFROM: <Blocked Number>\n\nMESSAGE:\nHere\'s the deal pal... heard of this real easy score.  Couple of drek-heads tried to kidnap Mercurial from here gig tonight at Underworld 93.   There\'s some serious intrest floating around about finding them before the pigs. 10,000\302\245 for information leading to thier capture.  \n\nRESPONSE: \nI\'m in. C and L, too.\n\nMESSAGE: \nGot a tip. Someone saw the van down I-5, near Yoshiro\'s, check that out first.\n\n"
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PopupType"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: " Runner Cell Phone Messages -"
      }
    }
    ops {
      functionName: "Delete Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5493ad4a666538100a0003f8"
          }
        }
      }
    }
    ops {
      functionName: "Clear Persistent Dead Bodies"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "520267f1373361e40c001676"
          }
        }
      }
    }
    ops {
      functionName: "Set Waypoint on Prop"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5493a172666538100a000383"
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "item_Yoshiros_CellPhone"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5493a9d5666538100a0003f4"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Combat.End"
  events {
    ops {
      functionName: "On Turn Mode Enter"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Team\'s Turn"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Set Waypoint on Prop"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5493ad4a666538100a0003f8"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "559abc14323137581c004c2d"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "General.Crowd [1]"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "552dc74f663136a805006d31"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Display Text over Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "552dc747663136a805006d30"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "I didn\'t see nuthin\'!"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 255
      }
      args {
        float_value: 0
      }
      args {
        float_value: 128
      }
      args {
        float_value: 7
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "552dc74f663136a805006d31"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "552dc781663136a805006d33"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "General.Crowd [2]"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "552dc763663136a805006d32"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Display Text over Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "552dc724663136a805006d2d"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "You fragged them up good- serves \'em right!"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 255
      }
      args {
        float_value: 128
      }
      args {
        float_value: 128
      }
      args {
        float_value: 7
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "552dc763663136a805006d32"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "552dc794663136a805006d34"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: ""
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "54b165aa6665382009000dc7"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "--=== Scene Transition Triggers ===--"
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "54b165aa6665382009000dc8"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "SceneExit.TaxiStation"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5493a172666538100a000383"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "549311956665387404005995"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5493a236666538100a000385"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5493a265666538100a000391"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5493a1fb666538100a000384"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "SceneExit.DogHouse"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5493a6dc666538100a0003ee"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "542848a8633464d816001ad5"
          }
          args {
            string_value: "int_Hideout"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "549311c06665387404005996"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Change Actor Control"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "549311c06665387404005996"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PlayerOrAI"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "542848a8633464d816001ad5"
          }
          args {
            string_value: "bool_HasVan"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "542848a8633464d816001ad5"
          }
          args {
            string_value: "str_SceneTitle"
          }
        }
      }
      args {
        string_value: "Barrens - Returning to the DogHouse"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "542848a8633464d816001ad5"
          }
          args {
            string_value: "str_SceneDetails"
          }
        }
      }
      args {
        string_value: "Leaving Newt\'s van in the parking lot, you steal the runner van, and try not to think about the possible bad things that will come from that.\n\nIt only makes sense to head back to the Doghouse- no one knows where it is, not even the locals, and no one would expect a superstar like Maria Mercurial to be hidden there. \n\nYou hope to Ghost that Silver Arrow has gotten rid of the bodies, fixed the doors, and hopefully cleaned up the place. He knew you were hiring a team, but I doubt he\'ll be expecting you to bring fragging Maria Mercurial home with you.\n\nTime lay low, plan your next move."
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "542848a8633464d816001ad5"
          }
          args {
            string_value: "int_NPC_Status_Foley"
          }
        }
      }
      args {
        int_value: 3
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "542848a8633464d816001ad5"
          }
          args {
            string_value: "str_SpawnPoint"
          }
        }
      }
      args {
        string_value: "DOGHOUSE-RETURN"
      }
    }
  }
  isActive: true
  idRef {
    id: "5493baa0666538100a00049f"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "SceneExit.Penthouse"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
    ops {
      functionName: "AND"
      args {
        call_value {
          functionName: "Comparison (bool)"
          args {
            call_value {
              functionName: "Get Variable (bool)"
              args {
                string_value: "bol_TakingACab"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "bool"
              }
              args {
                int_value: 1
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Comparison (int)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "542848a8633464d816001ad5"
              }
              args {
                string_value: "int_Hideout"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Comparison Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            int_value: 2
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Clear All Waypoints"
    }
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "549311c06665387404005996"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Change Actor Control"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "549311c06665387404005996"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PlayerOrAI"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "542848a8633464d816001ad5"
          }
          args {
            string_value: "str_SceneDetails"
          }
        }
      }
      args {
        string_value: "The cab arrives quickly, and your team piles into the back. Luckily, there\'s enough room for everyone, although it\'s a little tight and Maria has to sit on a lap- but no one seems to mind that.\n\nThe cab heads uptown, running a pattern that Max requested, hoping to lose any tail. It feels like driving around in circles, but it gives you time to think and clear your head. Maria\'s penthouse makes the most sense- it\'s not like people know where it is, and it has layers of security that come from being a haven for the rich.\n\nMaria stays quiet for the entire ride, staring glassy-eyed out the window. She\'s acting like a completely different person to the woman who screamed as she attacked. You\'re beginning to wonder what\'s up with that.\n\nIt\'s time to plan your next move."
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "542848a8633464d816001ad5"
          }
          args {
            string_value: "str_SpawnPoint"
          }
        }
      }
      args {
        string_value: "PENTHOUSE-ENTRY"
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "542848a8633464d816001ad5"
          }
          args {
            string_value: "int_NPC_Status_Foley"
          }
        }
      }
      args {
        int_value: 3
      }
    }
    ops {
      functionName: "Open Scene"
      args {
        call_value {
          functionName: "Get Map Item (Scene)"
          args {
            string_value: "HUB - Penthouse"
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5493baf3666538100a0004a0"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Disable.isChecked"
  events {
    ops {
      functionName: "On Actor Alive"
    }
    ops {
      functionName: "On Combat Entered"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Remove Tag from Actor"
      args {
        call_value {
          functionName: "Tag From String"
          args {
            string_value: "isChecked"
          }
        }
      }
      args {
        call_value {
          functionName: "All Actors"
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55c7d6ef663136c412001c7e"
  }
  elseActions {
  }
  is_oneshot: false
}
regions {
  name: "Camera Region"
  position {
    x: 22
    y: -88
    width: 63
    height: 147
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "520267f1373361e40c001676"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.29411766
    g: 0.29411766
    b: 0.29411766
    a: 0
  }
  ambient_light_color {
    r: 0.26274511
    g: 0.4
    b: 0.49019608
    a: 0
  }
  ambience_template: "barrens-night"
  combat_music: "Seattle-Set6-Combat"
  default_music: "Seattle-Set6-Ominous"
  loop_combat_music: true
  loop_default_music: true
  no_fow_in_region: false
}
regions {
  name: "rActorSpawner"
  position {
    x: -9
    y: -39
    width: 3
    height: 6
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "54934f30666538480b000976"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  ambient_light_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "rTaxiCab"
  position {
    x: 39
    y: -1
    width: 2
    height: 3
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5493a0d2666538100a00037f"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "rRunnerSpawnPoint"
  position {
    x: 51
    y: -9
    width: 5
    height: 3
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5493b2e9666538100a000467"
  }
  highlight_color {
    r: 1
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "rCallRunners"
  position {
    x: 55
    y: -1
    width: 8
    height: 8
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5493b424666538100a000469"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "rCrowd1"
  position {
    x: 47
    y: 22
    width: 5
    height: 5
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "552dc74f663136a805006d31"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "rCrowd2"
  position {
    x: 50
    y: 27
    width: 4
    height: 4
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "552dc763663136a805006d32"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "Ganger 1"
  position {
    x: 59
    y: 30
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5591cf463231379c1c00343f"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "Ganger 2"
  position {
    x: 52
    y: 26
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5591cf5b3231379c1c003440"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "Ganger 3"
  position {
    x: 44
    y: 26
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5591cf643231379c1c003441"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "Ganger 4"
  position {
    x: 40
    y: 27
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5591cf6b3231379c1c003442"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "Ganger 5"
  position {
    x: 40
    y: -34
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5591cf733231379c1c003443"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "Ganger 6"
  position {
    x: 46
    y: -34
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5591cf813231379c1c003444"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "Ganger 7"
  position {
    x: 39
    y: -39
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5591cf933231379c1c003445"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "Ganger 8"
  position {
    x: 44
    y: -38
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5591cf983231379c1c003446"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 60
    y: 0
    z: -24
  }
  orientation: ORIENTATION_E
  displayName: "SRI_Cameo"
  idRef {
    id: "545825a46665382c0f0018f9"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    interactionIcon: InteractionIcon_Conversation
    interaction_info_text: "Dave"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/OrkMale"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 4
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 9
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "CyberdeckExcalibur"
    }
    equipment {
      prefab_name: "Player_DeckerJacket"
    }
    team_id: "Civilians"
    char_name: "Dave"
    pc_spawn_number: -1
    cyberware_jack: "Datajack"
    portrait {
      filename: "pc_orkmale_09a_dragonmage"
    }
    portrait_code_override: "s2h0c6b10c12t0"
    karma: 51
    has_fist: false
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 61
    y: 0
    z: 1
  }
  orientation: ORIENTATION_E
  displayName: "Ego"
  idRef {
    id: "549311866665387404005994"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "Player"
    enabled_at_start: true
    pc_spawn_number: 0
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 60
    y: 0
    z: 4
  }
  orientation: ORIENTATION_W
  displayName: "Fixer"
  idRef {
    id: "549311956665387404005995"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    prerequisites {
      ops {
        functionName: "Evaluate Turn Mode"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "TurnBasedOrFreeMove"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    conversationPoint {
      conversationID: "553274aa663136cc010059c1"
      turnToFace: true
    }
    interaction_info_text: "Talk to Max?"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Wealthy/HumanMaleAutumn"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 1
        quickness: 2
        strength: 1
        charisma: 4
        intelligence: 3
        willpower: 4
        essence: 1
        hp: 0
        ap: 0
        morale: 24
        discipline: 0
        awareness: 24
        perception: 20
        authority: 0
        protect_tether_range: 5
        move_speed: 6
        is_fearless: 1
      }
      skills {
        ranged_combat: 3
        dodge: 3
        etiquette_street: 4
      }
      specializations {
        pistol: 1
      }
      archetypeName: "Non-Combatant"
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Pi 1 Fichetti Security 500"
    }
    equipment {
      prefab_name: "RiggerTrenchcoat"
    }
    team_id: "Civilians"
    char_name: "Max Foley"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "geeked_MaxFoley"
    }
    description_bio: "Foley is in his 50s, short, fat and balding, wears latest fashions, suited to teens. He smokes large cigarettes. He\'s a talker. His constant refrain is \"Am I right?\""
    portrait_code_override: "s3h2c6b1c6t0"
    karma: 65
    hiring_cost_override: 1000
    hiring_tag: "Max Foley"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 59
    y: 0
    z: 4
  }
  orientation: ORIENTATION_W
  displayName: "Team"
  idRef {
    id: "549311c06665387404005996"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/HumanFemale"
    character_sheet_id: "Lvl3_Elf_Samurai"
    equipment_sheet_id: "NPC_MariaMercurial_OnRUN"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 2
        magic: 0
        hp: 0
        ap: 0
        armor: 1
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 3
        close_combat: -1
        throwing_weapons: -3
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 1
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 1
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 3
        rifle: 0
        shotgun: 0
        smg: 4
        edged: -3
        unarmed: 3
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Shadowrunners"
    char_name: "Maria Mercurial"
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    cyberware_jack: "Datajack"
    cyberware_left_arm: "Obvious Cyberarm"
    cyberware_right_arm: "Obvious Cyberarm"
    cyberware_left_leg: "Obvious Cyberleg 2"
    cyberware_right_leg: "Obvious Cyberleg 2"
    portrait {
      filename: "geeked_maria_amazon"
    }
    description_bio: ""
    portrait_code_override: "s4h7c1"
    karma: 3
    hiring_cost_override: 1800
    hiring_tag: "Cybered Warrior"
    is_backer: true
    id: "sc_mercurial"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -9
    y: 0
    z: -39
  }
  orientation: ORIENTATION_N
  displayName: "EyeCandy"
  idRef {
    id: "54934d88666538480b000970"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/InvisibleActor"
    character_sheet_id: "AGChemie_Cyberzombie_Lv1"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        armor: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        dodge: 0
      }
      specializations {
        rifle: 0
        edged: 0
        unarmed: 0
      }
      archetypeName: "Non-Combatant"
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Dakota"
    pc_spawn_number: -1
    portrait {
      filename: "pc_orkfemale_05b_blondedreads"
    }
    karma: 174
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -9
    y: 0
    z: -37
  }
  orientation: ORIENTATION_N
  displayName: "EyeCandy"
  idRef {
    id: "54934d8d666538480b000972"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/InvisibleActor"
    character_sheet_id: "AGChemie_Cyberzombie_Lv1"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        armor: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        dodge: 0
      }
      specializations {
        rifle: 0
        edged: 0
        unarmed: 0
      }
      archetypeName: "Non-Combatant"
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Raelee"
    pc_spawn_number: -1
    portrait {
      filename: "pc_elffemale_07_isaacnagel"
    }
    karma: 174
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -9
    y: 0
    z: -38
  }
  orientation: ORIENTATION_N
  displayName: "EyeCandy"
  idRef {
    id: "54934ede666538480b000974"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/InvisibleActor"
    character_sheet_id: "AGChemie_Cyberzombie_Lv1"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        armor: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        dodge: 0
      }
      specializations {
        rifle: 0
        edged: 0
        unarmed: 0
      }
      archetypeName: "Non-Combatant"
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Candy"
    pc_spawn_number: -1
    portrait {
      filename: "pc_dwarffemale_05a_sexy"
    }
    karma: 174
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -9
    y: 0
    z: -35
  }
  orientation: ORIENTATION_S
  displayName: "TaxiCompany"
  idRef {
    id: "5493a265666538100a000391"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/InvisibleActor"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Taxi Cab Operator"
    pc_spawn_number: -1
    portrait {
      filename: "npc_dwarffemale_maliit"
    }
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -7
    y: 0
    z: -34
  }
  orientation: ORIENTATION_E
  GeneralTags: "isRunner"
  displayName: "Runners"
  idRef {
    id: "5493a72b666538100a0003ef"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Security/HumanMaleSecurity"
    character_sheet_id: "Lvl3_Merc_Human_Assassin"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
        is_fearless: 1
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 1
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
        normal: VulnerabilityLevel_Default
      }
    }
    equipment {
      prefab_name: "Pi 1 Fichetti Security 500 (Silencer)"
    }
    equipment {
      prefab_name: "Grenade (Smoke)"
    }
    team_id: "Civilians"
    char_name: "Mike"
    GeneralTags: "isRunner"
    pc_spawn_number: -1
    cyberware_eyes: "Berlin_BrightLight System"
    portrait {
      filename: "pc_humanmale_02c_topknot"
    }
    karma: 85
    persistent_body: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -7
    y: 0
    z: -35
  }
  orientation: ORIENTATION_E
  GeneralTags: "isRunner"
  displayName: "Runners"
  idRef {
    id: "5493a733666538100a0003f0"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Standard/HumanFemaleMage"
    character_sheet_id: "Lvl4_Elf_Mage"
    character_mod {
      stats {
        body: -2
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: -2
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
        is_fearless: 1
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: -1
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
        normal: VulnerabilityLevel_Default
        magic: VulnerabilityLevel_Default
      }
    }
    equipment {
      prefab_name: "Spell Manaball 1"
    }
    equipment {
      prefab_name: "Spell Heal 1"
    }
    equipment {
      prefab_name: "Spell Powerbolt 1"
    }
    equipment {
      prefab_name: "MageSlick"
    }
    equipment {
      prefab_name: "Spell Armor 1"
    }
    team_id: "Civilians"
    char_name: "Lori"
    GeneralTags: "isRunner"
    pc_spawn_number: -1
    portrait {
      filename: "pc_humanfemale_10_combatmage"
    }
    karma: 78
    persistent_body: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -7
    y: 0
    z: -36
  }
  orientation: ORIENTATION_E
  GeneralTags: "isRunner"
  displayName: "Runners"
  idRef {
    id: "5493a74e666538100a0003f1"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Punk/HumanMaleSpikyPunk"
    character_sheet_id: "Lvl3_Elf_Samurai"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
        is_fearless: 1
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Sword 1 Machete"
    }
    equipment {
      prefab_name: "Grenade 1 (Flash)"
    }
    team_id: "Civilians"
    char_name: "Colin"
    GeneralTags: "isRunner"
    pc_spawn_number: -1
    portrait {
      filename: "npc_humanmale_alnur"
    }
    karma: 88
    persistent_body: true
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 58
    y: 0
    z: 1
  }
  orientation: ORIENTATION_S
  idRef {
    id: "5517ab246631361c0e003bbc"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 3
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 58
    y: 0
    z: 2
  }
  orientation: ORIENTATION_S
  idRef {
    id: "5517ab296631361c0e003bbd"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 2
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 61
    y: 0
    z: 3
  }
  orientation: ORIENTATION_N
  idRef {
    id: "5517ab2c6631361c0e003bbe"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 1
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 74
    y: 0
    z: 14
  }
  orientation: ORIENTATION_E
  displayName: "Shaman"
  idRef {
    id: "55186566663136c411002611"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/HumanMale"
    character_sheet_id: "Lvl5_Dwarf_Shaman"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: -60
        perception: -20
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 5
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Bound Toxic Spirit 1"
    }
    equipment {
      prefab_name: "Berlin_Bound Air Spirit 1"
    }
    equipment {
      prefab_name: "Berlin_Spell Nerve Bolt 1"
    }
    equipment {
      prefab_name: "Berlin_Spell Fog"
    }
    equipment {
      prefab_name: "Spell Armor 2"
    }
    equipment {
      prefab_name: "Spell Stunball 1"
    }
    equipment {
      prefab_name: "Spell Flamethrower 2"
    }
    equipment {
      prefab_name: "Spell Fireball 1"
    }
    equipment {
      prefab_name: "Spell Powerbolt 2"
    }
    equipment {
      prefab_name: "RiggerTrenchcoat"
    }
    team_id: "Civilians"
    char_name: "Dances With Traffic"
    pc_spawn_number: -1
    portrait {
      filename: "GEEKED_DancesWithTraffic"
    }
    portrait_code_override: "s2h1c7b11c7"
    karma: 124
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 75
    y: 0
    z: 18
  }
  orientation: ORIENTATION_W
  displayName: "Watcher"
  idRef {
    id: "55293fc5663136540600494c"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/InvisibleActor"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: -1
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: -2
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: -6
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 90
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Shadowrunners"
    char_name: "ShamanCamera"
    pc_spawn_number: -1
    ai_ignores: true
    portrait {
      filename: ""
    }
    karma: 5
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 25
    y: 0
    z: 56
  }
  orientation: ORIENTATION_S
  GeneralTags: "isGeeked"
  displayName: "0"
  idRef {
    id: "555d225a6131317c1e0033b4"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 2
    interactionIcon: InteractionIcon_Conversation
    interaction_info_text: "Talk to Cain?"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Story/SaraCastle"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Castle"
    GeneralTags: "isGeeked"
    enabled_at_start: true
    pc_spawn_number: -1
    cyberware_jack: "Datajack"
    cyberware_body: "Orthoskin"
    portrait {
      filename: "backer_humanfemale_saracastle_drsaracastle_tribute"
    }
    portrait_code_override: "s6h7c7b8c1t0"
    karma: 6
    persistent_body: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 27
    y: 0
    z: 66
  }
  orientation: ORIENTATION_S
  displayName: "Vendor"
  idRef {
    id: "555d225a6131317c1e0033b5"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    dummyInteraciton {
    }
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/InvisibleActor"
    character_sheet_id: "BaseCivilian"
    equipment_sheet_id: "Berlin_Merchant_Weapons_1"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Geeked_Low"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 6
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 54
    y: 2
    z: 2
  }
  orientation: ORIENTATION_W
  displayName: "Camera"
  idRef {
    id: "5569dc82663136800f006093"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    dummyInteraciton {
    }
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/InvisibleActor"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "VanWatcher"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    unkillable: true
    portrait {
      filename: ""
    }
    karma: 6
    is_prop_character: true
    hide_floaties: true
    has_fist: false
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -8
    y: 0
    z: -17
  }
  orientation: ORIENTATION_N
  GeneralTags: "isExtra"
  GeneralTags: "isWave1"
  displayName: "1"
  idRef {
    id: "5591cd2c3231379c1c003437"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:Gangers/HumanMaleBerlinGanger_Magnifiker"
    character_sheet_id: "Lvl2_Merc_Human_Weaponmaster"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: -20
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
        is_fearless: 1
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "SMG 1 Uzi III"
    }
    equipment {
      prefab_name: "Berlin_HealthPack"
    }
    team_id: "FutureGangers"
    char_name: "Street Ganger"
    GeneralTags: "isExtra"
    GeneralTags: "isWave1"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 68
    persistent_body: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -8
    y: 0
    z: -16
  }
  orientation: ORIENTATION_N
  GeneralTags: "isExtra"
  GeneralTags: "isWave1"
  displayName: "2"
  idRef {
    id: "5591cdd63231379c1c003438"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:Gangers/HumanMaleBerlinGanger_Magnifiker"
    character_sheet_id: "Lvl2_Merc_Human_Weaponmaster"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: -20
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
        is_fearless: 1
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "SMG 1 Uzi III"
    }
    equipment {
      prefab_name: "Berlin_HealthPack"
    }
    team_id: "FutureGangers"
    char_name: "Street Ganger"
    GeneralTags: "isExtra"
    GeneralTags: "isWave1"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 68
    persistent_body: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -8
    y: 0
    z: -15
  }
  orientation: ORIENTATION_N
  GeneralTags: "isExtra"
  GeneralTags: "isWave2"
  displayName: "3"
  idRef {
    id: "5591cdeb3231379c1c003439"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:Gangers/HumanMaleBerlinGanger_Magnifiker"
    character_sheet_id: "Lvl2_Merc_Human_Weaponmaster"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: -20
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
        is_fearless: 1
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "SMG 1 Uzi III"
    }
    equipment {
      prefab_name: "Berlin_HealthPack"
    }
    team_id: "FutureGangers"
    char_name: "Street Ganger"
    GeneralTags: "isExtra"
    GeneralTags: "isWave2"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 68
    persistent_body: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -7
    y: 0
    z: -17
  }
  orientation: ORIENTATION_N
  GeneralTags: "isExtra"
  GeneralTags: "isWave2"
  displayName: "4"
  idRef {
    id: "5591ce083231379c1c00343a"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:Gangers/HumanMaleBerlinGanger_Magnifiker"
    character_sheet_id: "Lvl2_Merc_Human_Weaponmaster"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: -20
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
        is_fearless: 1
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "SMG 1 Uzi III"
    }
    equipment {
      prefab_name: "Berlin_HealthPack"
    }
    team_id: "FutureGangers"
    char_name: "Street Ganger"
    GeneralTags: "isExtra"
    GeneralTags: "isWave2"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 68
    persistent_body: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -7
    y: 0
    z: -16
  }
  orientation: ORIENTATION_N
  GeneralTags: "isExtra"
  GeneralTags: "isWave1"
  displayName: "5"
  idRef {
    id: "5591ce163231379c1c00343b"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:Gangers/OrkFemaleBerlinGanger_Magnifiker"
    character_sheet_id: "Lvl2_Merc_Human_Weaponmaster"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: -20
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
        is_fearless: 1
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Berlin_HealthPack"
    }
    equipment {
      prefab_name: "Sh 1 Ganger Shotgun"
    }
    team_id: "FutureGangers"
    char_name: "Street Ganger"
    GeneralTags: "isExtra"
    GeneralTags: "isWave1"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 68
    persistent_body: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -7
    y: 0
    z: -15
  }
  orientation: ORIENTATION_N
  GeneralTags: "isExtra"
  GeneralTags: "isWave2"
  displayName: "6"
  idRef {
    id: "5591ce3c3231379c1c00343c"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:Gangers/OrkFemaleBerlinGanger_Magnifiker"
    character_sheet_id: "Lvl2_Merc_Human_Weaponmaster"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: -20
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
        is_fearless: 1
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Berlin_HealthPack"
    }
    equipment {
      prefab_name: "Sh 1 Ganger Shotgun"
    }
    team_id: "FutureGangers"
    char_name: "Street Ganger"
    GeneralTags: "isExtra"
    GeneralTags: "isWave2"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 68
    persistent_body: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -6
    y: 0
    z: -17
  }
  orientation: ORIENTATION_N
  GeneralTags: "isExtra"
  GeneralTags: "isWave3"
  displayName: "7"
  idRef {
    id: "5591ce413231379c1c00343d"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Gangers/TrollMaleGanger_Halloweener"
    character_sheet_id: "Lvl2_Merc_Troll_Brute"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
        is_fearless: 1
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 1
        unarmed: -1
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Berlin_HealthPack"
    }
    equipment {
      prefab_name: "Berlin_Sword 1 Baseball Bat"
    }
    team_id: "FutureGangers"
    char_name: "Street Ganger"
    GeneralTags: "isExtra"
    GeneralTags: "isWave3"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 54
    persistent_body: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -6
    y: 0
    z: -16
  }
  orientation: ORIENTATION_N
  GeneralTags: "isExtra"
  GeneralTags: "isWave3"
  displayName: "8"
  idRef {
    id: "5591ce963231379c1c00343e"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:Gangers/ElfFemaleBerlinGanger_Magnifiker"
    character_sheet_id: "Lvl2_Human_Mage"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
        is_fearless: 1
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Berlin_HealthPack"
    }
    equipment {
      prefab_name: "Berlin_Spell Flamethrower 2"
    }
    equipment {
      prefab_name: "Berlin_Spell Weaken Armor 2"
    }
    equipment {
      prefab_name: "Berlin_Spell Heal 2"
    }
    team_id: "FutureGangers"
    char_name: "Street Mage"
    GeneralTags: "isExtra"
    GeneralTags: "isWave3"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 50
    persistent_body: true
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "int_MemphisGirl"
    typeName: "int"
  }
}
variables {
  string_value: ""
  variableref_value {
    scope: TsVariableScope_Scene
    name: "str_MemphisOpener"
    typeName: "string"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "bol_TakingACab"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "bol_TaxiRefused"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "bol_DanceWithTrafficHostile"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "bFreeRange"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "b_Leaveattempt"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "b_FirstCab"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "b_CalledCab"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "B_WalkedwithTraffic"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "b_TalkedtoMax"
    typeName: "bool"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "int_Waves"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "int_RandomChat"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "int_RunnerDead"
    typeName: "int"
  }
}
mapEvents: "eMaxLeaves"
mapEvents: "eSummonRunners"
mapEvents: "eWaves"
mapEvents: "eRandomChat"
senseTags: "isWave2"
senseTags: "isWave3"
goals {
  name: "Protect Mercurial"
  type: GoalType_Primary
  status: GoalStatus_Hidden
  description: "BodyGuard 101 Chummer... Protect the Protectee."
}
goals {
  name: "You\'ve been killed..."
  type: GoalType_Primary
  status: GoalStatus_Hidden
  description: "Dead runners are far less likely to get paid..."
}
goals {
  name: "Get a quote to fix Newt\'s Van"
  type: GoalType_Secondary
  status: GoalStatus_Hidden
}
goals {
  name: "Meet Dave"
  type: GoalType_Secondary
  status: GoalStatus_Hidden
}
worldMapLocation {
  filename: ""
  location {
    x: 0
    y: 0
  }
}
mapName: "SCENE - Yoshiros"
parentStory: ""
scene_title: "Yoshiro\'s Resturant"
scene_subtitle: ""
scene_synopsis: "$(story.str_SceneDetails)"
scene_image: "marialoading"
scene_continue_button_skip: false
scene_restore_runner_health: true
directional_light_dir {
  x: -0.5
  y: -1
  z: -0.75
}
directional_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
ambient_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
allow_drawn_weapons: false
team_affiliations {
  team_name: "Shadowrunners"
  affiliation: 0
  affiliation: 1
  affiliation: 1
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Gangers"
  affiliation: 1
  affiliation: 0
  affiliation: 1
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "LoneStar"
  affiliation: 1
  affiliation: 1
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Civilians"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "FutureGangers"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
scene_dimensions {
  dimension_name: "Default"
}
character_roster {
}
show_hiring_screen_on_scene_load: false
scene_hiring_prerequisites {
  prereq_description: ""
  prereq_conditions {
  }
}
hiring_slot_count: 3
hiring_minimum_karma: 0
hiring_maximum_karma: 8
roster_overrides {
  roster_entries {
    reference_id: "MERCURIAL_Crew_Blight_Lv1"
    hiring_conditions {
    }
    hiring_cost: -1
    content_pack_source: "542848a8633464d816001ad5"
  }
  roster_entries {
    reference_id: "MERCURIAL_Crew_ElJefe_Lv1"
    hiring_conditions {
    }
    hiring_cost: -1
    content_pack_source: "542848a8633464d816001ad5"
  }
  roster_entries {
    reference_id: "MERCURIAL_Crew_Gunner_Lv1"
    hiring_conditions {
    }
    hiring_cost: -1
    content_pack_source: "542848a8633464d816001ad5"
  }
  roster_entries {
    reference_id: "MERCURIAL_Crew_Luna_Lv1"
    hiring_conditions {
    }
    hiring_cost: -1
    content_pack_source: "542848a8633464d816001ad5"
  }
  roster_entries {
    reference_id: "MERCURIAL_Crew_Nebel_Lv1"
    hiring_conditions {
    }
    hiring_cost: -1
    content_pack_source: "542848a8633464d816001ad5"
  }
  roster_entries {
    reference_id: "MERCURIAL_Crew_Padre_Lv1"
    hiring_conditions {
    }
    hiring_cost: -1
    content_pack_source: "542848a8633464d816001ad5"
  }
  roster_entries {
    reference_id: "MERCURIAL_Crew_Shiver_Lv1"
    hiring_conditions {
    }
    hiring_cost: -1
    content_pack_source: "542848a8633464d816001ad5"
  }
  roster_entries {
    reference_id: "MERCURIAL_Crew_SilverArrow_Lv1"
    hiring_conditions {
    }
    hiring_cost: -1
    content_pack_source: "542848a8633464d816001ad5"
  }
  roster_entries {
    reference_id: "MERCURIAL_Crew_Sucio_Lv1"
    hiring_conditions {
    }
    hiring_cost: -1
    content_pack_source: "542848a8633464d816001ad5"
  }
}
use_hiring_cost_warning: false
hiring_average_cost: 99999
override_hiring_average_cost: true
show_equip_screen_on_scene_load: false
is_persistant: false
is_persistant_has_value: false
can_move_outside_camera_regions: false
can_start_before_triggers: false
can_use_team_advancement: false

triggers {
  name: "--=== General Scene Triggers ===--"
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "5543f590663136b00c001376"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "General.onMapLoad"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Actor Display Name"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isResident"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        string_value: "SunnySide Resident"
      }
    }
    ops {
      functionName: "Set Actor Display Name"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5543f9ad663136b00c001387"
              }
            }
          }
          args {
          }
        }
      }
      args {
        string_value: "Officer Hendrickson"
      }
    }
  }
  isActive: true
  idRef {
    id: "5543f5be663136b00c00137a"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "General.onMapLoad [DEBUGGER]"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "542848a8633464d816001ad5"
          }
          args {
            string_value: "DEBUGGERMODE"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Actor Display Name"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isResident"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        string_value: "SunnySide Resident"
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "55440935663136b00c0013b0"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55441d8f663136b00c001408"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "General.Contact_Animations"
  events {
    ops {
      functionName: "On Map Start"
    }
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5543f4e1663136b00c001368"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Seattle:General/standing_dizzy"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5543f988663136b00c00137e"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Seattle:General/standing_idle_repairing"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5543f98b663136b00c00137f"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Seattle:General/standing_idle_junky"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5543f999663136b00c001380"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Seattle:General/standing_idle_preen"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5543f999663136b00c001381"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Seattle:General/standing_idle_repairing"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5543f999663136b00c001382"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Seattle:General/standing_idle_btltweaking"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5543f9ad663136b00c001383"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Seattle:General/standing_idle_repairing"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5543f9ad663136b00c001384"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Seattle:General/standing_idle_sexy"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5543f9ad663136b00c001385"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Seattle:General/standing_idle_sweeping"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5543f9ad663136b00c001386"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Seattle:General/standing_dodge"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5543f9ad663136b00c001387"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Seattle:General/standing_idle_bouncer"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5543f9ad663136b00c001388"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Seattle:General/standing_idle_repairing"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5545d0d6663136680a004da2"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "General.TalkToSGTMatthews"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "554ab3e0663136c010003012"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "554ab4a1663136c01000301f"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "554ab3e0663136c010003012"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "554abacd663136c01000304b"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: " "
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "5543f5a4663136b00c001377"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "--=== Debugger/Testing Triggers ===--"
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "55441e3c663136b00c00140c"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "DEBUGGER.IdentifyContacts"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5544189d663136b00c0013b3"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Prop"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                string_value: "isContact1"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5544189d663136b00c0013b3"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        string_value: "Contact: 1"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 300
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Prop"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                string_value: "isContact2"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5544189d663136b00c0013b3"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        string_value: "Contact: 2"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 300
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Prop"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                string_value: "isContact3"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5544189d663136b00c0013b3"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        string_value: "Contact: 3"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 300
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Prop"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                string_value: "isContact4"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5544189d663136b00c0013b3"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        string_value: "Contact: 4"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 300
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Prop"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                string_value: "isContact5"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5544189d663136b00c0013b3"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        string_value: "Contact: 5"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 300
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Prop"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                string_value: "isContact6"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5544189d663136b00c0013b3"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        string_value: "Contact: 6"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 300
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Prop"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                string_value: "isContact7"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5544189d663136b00c0013b3"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        string_value: "Contact: 7"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 300
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Prop"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                string_value: "isContact8"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5544189d663136b00c0013b3"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        string_value: "Contact: 8"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 300
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Prop"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                string_value: "isContact9"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5544189d663136b00c0013b3"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        string_value: "Contact: 9"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 300
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Prop"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                string_value: "isContact10"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5544189d663136b00c0013b3"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        string_value: "Contact: 10"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 300
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Prop"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                string_value: "isContact11"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5544189d663136b00c0013b3"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        string_value: "Contact: 11"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 300
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Prop"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                string_value: "isContact12"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5544189d663136b00c0013b3"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        string_value: "Contact: 12"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 300
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "55440935663136b00c0013b0"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: " "
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "55441e3c663136b00c00140b"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "--=== LegWork Triggers ===--"
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "5543f5ae663136b00c001378"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Legwork.AssignContacts [ Random ]"
  events {
    ops {
      functionName: "On Actor Alive"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isQuest"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iLegWorkCount"
          }
        }
      }
      args {
        call_value {
          functionName: "Random (int)"
          args {
            int_value: 1
          }
          args {
            int_value: 6
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "sRolledNumbers"
          }
        }
      }
      args {
        call_value {
          functionName: "Append (string)"
          args {
            call_value {
              functionName: "Append (string)"
              args {
                call_value {
                  functionName: "Convert (int) to (string)"
                  args {
                    call_value {
                      functionName: "Get Variable (int)"
                      args {
                        string_value: "iLegWorkCount"
                      }
                    }
                  }
                }
              }
              args {
                string_value: " - "
              }
            }
          }
          args {
            call_value {
              functionName: "Get Variable (string)"
              args {
                string_value: "sRolledNumbers"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5543f6ff663136b00c00137c"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5543fa94663136b00c00138a"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "   Contact [1]"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iLegWorkCount"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5544004d663136b00c001397"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5543f6ff663136b00c00137c"
  }
  elseActions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400d8663136b00c001398"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "      Validate.Contact [1]"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bContact1"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bContact1"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Add Tag to Actor"
      args {
        call_value {
          functionName: "Tag From String"
          args {
            call_value {
              functionName: "Append (string)"
              args {
                call_value {
                  functionName: "Convert (int) to (string)"
                  args {
                    call_value {
                      functionName: "Get Variable (int)"
                      args {
                        string_value: "iLegWorkCount"
                      }
                    }
                  }
                }
              }
              args {
                string_value: "isContact"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Remove Tag from Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isQuest"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5544004d663136b00c001397"
  }
  elseActions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iLegWorkCount"
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400d8663136b00c001398"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "   Contact [2]"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iLegWorkCount"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  actions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400d8663136b00c001399"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "554400d8663136b00c001398"
  }
  elseActions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400dc663136b00c00139a"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "      Validate.Contact [2]"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bContact2"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bContact2"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Add Tag to Actor"
      args {
        call_value {
          functionName: "Tag From String"
          args {
            call_value {
              functionName: "Append (string)"
              args {
                call_value {
                  functionName: "Convert (int) to (string)"
                  args {
                    call_value {
                      functionName: "Get Variable (int)"
                      args {
                        string_value: "iLegWorkCount"
                      }
                    }
                  }
                }
              }
              args {
                string_value: "isContact"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Remove Tag from Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isQuest"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "554400d8663136b00c001399"
  }
  elseActions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iLegWorkCount"
          }
        }
      }
      args {
        int_value: 3
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400dc663136b00c00139a"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "   Contact [3]"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iLegWorkCount"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 3
      }
    }
  }
  actions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400dc663136b00c00139b"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "554400dc663136b00c00139a"
  }
  elseActions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400dc663136b00c00139c"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "      Validate.Contact [3]"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bContact3"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bContact3"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Add Tag to Actor"
      args {
        call_value {
          functionName: "Tag From String"
          args {
            call_value {
              functionName: "Append (string)"
              args {
                call_value {
                  functionName: "Convert (int) to (string)"
                  args {
                    call_value {
                      functionName: "Get Variable (int)"
                      args {
                        string_value: "iLegWorkCount"
                      }
                    }
                  }
                }
              }
              args {
                string_value: "isContact"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Remove Tag from Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isQuest"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "554400dc663136b00c00139b"
  }
  elseActions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iLegWorkCount"
          }
        }
      }
      args {
        int_value: 4
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400dc663136b00c00139c"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "   Contact [4]"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iLegWorkCount"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 4
      }
    }
  }
  actions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400dc663136b00c00139d"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "554400dc663136b00c00139c"
  }
  elseActions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400e2663136b00c00139e"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "      Validate.Contact [4]"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bContact4"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bContact4"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Add Tag to Actor"
      args {
        call_value {
          functionName: "Tag From String"
          args {
            call_value {
              functionName: "Append (string)"
              args {
                call_value {
                  functionName: "Convert (int) to (string)"
                  args {
                    call_value {
                      functionName: "Get Variable (int)"
                      args {
                        string_value: "iLegWorkCount"
                      }
                    }
                  }
                }
              }
              args {
                string_value: "isContact"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Remove Tag from Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isQuest"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "554400dc663136b00c00139d"
  }
  elseActions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iLegWorkCount"
          }
        }
      }
      args {
        int_value: 5
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400e2663136b00c00139e"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "   Contact [5]"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iLegWorkCount"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 5
      }
    }
  }
  actions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400e2663136b00c00139f"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "554400e2663136b00c00139e"
  }
  elseActions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400e2663136b00c0013a0"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "      Validate.Contact [5]"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bContact5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bContact5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Add Tag to Actor"
      args {
        call_value {
          functionName: "Tag From String"
          args {
            call_value {
              functionName: "Append (string)"
              args {
                call_value {
                  functionName: "Convert (int) to (string)"
                  args {
                    call_value {
                      functionName: "Get Variable (int)"
                      args {
                        string_value: "iLegWorkCount"
                      }
                    }
                  }
                }
              }
              args {
                string_value: "isContact"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Remove Tag from Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isQuest"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "554400e2663136b00c00139f"
  }
  elseActions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iLegWorkCount"
          }
        }
      }
      args {
        int_value: 6
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400e2663136b00c0013a0"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "   Contact [6]"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iLegWorkCount"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 6
      }
    }
  }
  actions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400e2663136b00c0013a1"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "554400e2663136b00c0013a0"
  }
  elseActions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400e5663136b00c0013a2"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "      Validate.Contact [6]"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bContact6"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bContact6"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Add Tag to Actor"
      args {
        call_value {
          functionName: "Tag From String"
          args {
            call_value {
              functionName: "Append (string)"
              args {
                call_value {
                  functionName: "Convert (int) to (string)"
                  args {
                    call_value {
                      functionName: "Get Variable (int)"
                      args {
                        string_value: "iLegWorkCount"
                      }
                    }
                  }
                }
              }
              args {
                string_value: "isContact"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Remove Tag from Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isQuest"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "554400e2663136b00c0013a1"
  }
  elseActions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iLegWorkCount"
          }
        }
      }
      args {
        int_value: 7
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400e5663136b00c0013a2"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "   Contact [7]"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iLegWorkCount"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 7
      }
    }
  }
  actions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400e5663136b00c0013a3"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "554400e5663136b00c0013a2"
  }
  elseActions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400e5663136b00c0013a4"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "      Validate.Contact [7]"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bContact7"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bContact7"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Add Tag to Actor"
      args {
        call_value {
          functionName: "Tag From String"
          args {
            call_value {
              functionName: "Append (string)"
              args {
                call_value {
                  functionName: "Convert (int) to (string)"
                  args {
                    call_value {
                      functionName: "Get Variable (int)"
                      args {
                        string_value: "iLegWorkCount"
                      }
                    }
                  }
                }
              }
              args {
                string_value: "isContact"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Remove Tag from Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isQuest"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "554400e5663136b00c0013a3"
  }
  elseActions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iLegWorkCount"
          }
        }
      }
      args {
        int_value: 8
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400e5663136b00c0013a4"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "   Contact [8]"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iLegWorkCount"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 8
      }
    }
  }
  actions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400e5663136b00c0013a5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "554400e5663136b00c0013a4"
  }
  elseActions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400e5663136b00c0013a6"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "      Validate.Contact [8]"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bContact8"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bContact8"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Add Tag to Actor"
      args {
        call_value {
          functionName: "Tag From String"
          args {
            call_value {
              functionName: "Append (string)"
              args {
                call_value {
                  functionName: "Convert (int) to (string)"
                  args {
                    call_value {
                      functionName: "Get Variable (int)"
                      args {
                        string_value: "iLegWorkCount"
                      }
                    }
                  }
                }
              }
              args {
                string_value: "isContact"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Remove Tag from Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isQuest"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "554400e5663136b00c0013a5"
  }
  elseActions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iLegWorkCount"
          }
        }
      }
      args {
        int_value: 9
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400e5663136b00c0013a6"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "   Contact [9]"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iLegWorkCount"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 9
      }
    }
  }
  actions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400e5663136b00c0013a7"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "554400e5663136b00c0013a6"
  }
  elseActions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400e5663136b00c0013a8"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "      Validate.Contact [9]"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bContact9"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bContact9"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Add Tag to Actor"
      args {
        call_value {
          functionName: "Tag From String"
          args {
            call_value {
              functionName: "Append (string)"
              args {
                call_value {
                  functionName: "Convert (int) to (string)"
                  args {
                    call_value {
                      functionName: "Get Variable (int)"
                      args {
                        string_value: "iLegWorkCount"
                      }
                    }
                  }
                }
              }
              args {
                string_value: "isContact"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Remove Tag from Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isQuest"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "554400e5663136b00c0013a7"
  }
  elseActions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iLegWorkCount"
          }
        }
      }
      args {
        int_value: 10
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400e5663136b00c0013a8"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "   Contact [10]"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iLegWorkCount"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 10
      }
    }
  }
  actions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400e5663136b00c0013a9"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "554400e5663136b00c0013a8"
  }
  elseActions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400e5663136b00c0013aa"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "      Validate.Contact [10]"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bContact10"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bContact10"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Add Tag to Actor"
      args {
        call_value {
          functionName: "Tag From String"
          args {
            call_value {
              functionName: "Append (string)"
              args {
                call_value {
                  functionName: "Convert (int) to (string)"
                  args {
                    call_value {
                      functionName: "Get Variable (int)"
                      args {
                        string_value: "iLegWorkCount"
                      }
                    }
                  }
                }
              }
              args {
                string_value: "isContact"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Remove Tag from Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isQuest"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "554400e5663136b00c0013a9"
  }
  elseActions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iLegWorkCount"
          }
        }
      }
      args {
        int_value: 11
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400e5663136b00c0013aa"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "   Contact [11]"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iLegWorkCount"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 11
      }
    }
  }
  actions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400e5663136b00c0013ab"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "554400e5663136b00c0013aa"
  }
  elseActions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400e5663136b00c0013ac"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "      Validate.Contact [11]"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bContact11"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bContact11"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Add Tag to Actor"
      args {
        call_value {
          functionName: "Tag From String"
          args {
            call_value {
              functionName: "Append (string)"
              args {
                call_value {
                  functionName: "Convert (int) to (string)"
                  args {
                    call_value {
                      functionName: "Get Variable (int)"
                      args {
                        string_value: "iLegWorkCount"
                      }
                    }
                  }
                }
              }
              args {
                string_value: "isContact"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Remove Tag from Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isQuest"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "554400e5663136b00c0013ab"
  }
  elseActions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iLegWorkCount"
          }
        }
      }
      args {
        int_value: 12
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400e5663136b00c0013ac"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "   Contact [12]"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iLegWorkCount"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 12
      }
    }
  }
  actions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "554400e5663136b00c0013ad"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "554400e5663136b00c0013ac"
  }
  elseActions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5543f6ff663136b00c00137c"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "      Validate.Contact [12]"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bContact12"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bContact12"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Add Tag to Actor"
      args {
        call_value {
          functionName: "Tag From String"
          args {
            call_value {
              functionName: "Append (string)"
              args {
                call_value {
                  functionName: "Convert (int) to (string)"
                  args {
                    call_value {
                      functionName: "Get Variable (int)"
                      args {
                        string_value: "iLegWorkCount"
                      }
                    }
                  }
                }
              }
              args {
                string_value: "isContact"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Remove Tag from Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isQuest"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "554400e5663136b00c0013ad"
  }
  elseActions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iLegWorkCount"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5543f6ff663136b00c00137c"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "LegWork.Contact [1]"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5543f4e1663136b00c001368"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "sCharacterIntro"
          }
        }
      }
      args {
        string_value: "The stinking dwarf with food in his beard peers at you with bloodshot eyes, clearly suffering from a hangover."
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "55441b9d663136b00c0013b5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5543f4e1663136b00c001368"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55442144663136b00c001452"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "LegWork.Contact [2]"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5543f988663136b00c00137e"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Seattle:General/standing_idle_talking"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "sCharacterIntro"
          }
        }
      }
      args {
        string_value: "This stained and road-weary backpacker has unusually bright eyes, an optimisitc world wanderer."
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "55441b9d663136b00c0013b5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5543f988663136b00c00137e"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "554421e8663136b00c001459"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "LegWork.Contact [3]"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5543f98b663136b00c00137f"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Seattle:General/standing_idle_talking"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "sCharacterIntro"
          }
        }
      }
      args {
        string_value: "The woman in the kerchief seems to stare through you, rather than at you.   She has extensive cyber modifications."
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "55441b9d663136b00c0013b5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5543f98b663136b00c00137f"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "554421ed663136b00c00145a"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "LegWork.Contact [4]"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5543f999663136b00c001380"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Seattle:General/standing_idle_talking"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "sCharacterIntro"
          }
        }
      }
      args {
        string_value: "She keeps a wary eye at the end of the alley, ready to spring into action at a moments notice."
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "55441b9d663136b00c0013b5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5543f999663136b00c001380"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "554421ed663136b00c00145b"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "LegWork.Contact [5]"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5543f999663136b00c001381"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "sCharacterIntro"
          }
        }
      }
      args {
        string_value: "Towering over you is a hulking giant of a troll, wrapped in a heavy leather coat and painted with symbols and other mystical knick-nacks.  He seems focued on a battle of wills with the spirit in front of him."
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "55441b9d663136b00c0013b5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5543f999663136b00c001381"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "554421f2663136b00c00145c"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "LegWork.Contact [6]"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5543f999663136b00c001382"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Seattle:General/standing_idle_talking"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "sCharacterIntro"
          }
        }
      }
      args {
        string_value: "The pale flesh of the flesh of the former ganger is a stark contrast to her raven black hair.   Her hands tremble, a tell-tale sign of a serious withdrawl..."
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "55441b9d663136b00c0013b5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5543f999663136b00c001382"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "554421f2663136b00c00145d"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "LegWork.Contact [7]"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5543f9ad663136b00c001383"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Seattle:General/standing_idle_talking"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "sCharacterIntro"
          }
        }
      }
      args {
        string_value: "He jumps as you approach... You\'ve clearly startled him."
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "55441b9d663136b00c0013b5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5543f9ad663136b00c001383"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "554421f2663136b00c00145e"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "LegWork.Contact [8]"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5543f9ad663136b00c001384"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "sCharacterIntro"
          }
        }
      }
      args {
        string_value: "This woman has been cut and shaped to perfection.  Every shapely curve screaming sexy and even her scent draws you in."
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "55441b9d663136b00c0013b5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5543f9ad663136b00c001384"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "554421fb663136b00c00145f"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "LegWork.Contact [9]"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5543f9ad663136b00c001385"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Seattle:General/standing_idle_talking"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "sCharacterIntro"
          }
        }
      }
      args {
        string_value: "While she stiffles a yawn and her posture screams exhausted... her eyes are sharp and focused."
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "55441b9d663136b00c0013b5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5543f9ad663136b00c001385"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "554421fb663136b00c001460"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "LegWork.Contact [10]"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5543f9ad663136b00c001386"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Seattle:General/standing_idle_talking"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "sCharacterIntro"
          }
        }
      }
      args {
        string_value: "Hes pratically vibrating in place, sucking down a huge mug of soykaf.  You can see a couple of high dose stim patchs stuck to the exposed portions of his neck."
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "55441b9d663136b00c0013b5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5543f9ad663136b00c001386"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "554421fb663136b00c001461"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "LegWork.Contact [11]"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5543f9ad663136b00c001387"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Seattle:General/standing_idle_talking"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "sCharacterIntro"
          }
        }
      }
      args {
        string_value: "His face is showing the strain of his barely represed hostility.  His perpetual snarl only seems to get worse as you approach."
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "55441b9d663136b00c0013b5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5543f9ad663136b00c001387"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "554421fb663136b00c001462"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "LegWork.Contact [12]"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5543f9ad663136b00c001388"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Seattle:General/standing_idle_talking"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "sCharacterIntro"
          }
        }
      }
      args {
        string_value: "This ork woman is standing here, hanging her laundry out to dry. She smiles up at you warmly as you approach, clearly not minding the interuption."
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "55441b9d663136b00c0013b5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5543f9ad663136b00c001388"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "554421fb663136b00c001463"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: " "
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "5545dced663136680a004dbd"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "--=== Scene Triggers ===--"
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "5545dced663136680a004dbe"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Scene.CopWarningEntry [UB]"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5545dcc5663136680a004dbc"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5543f9ad663136b00c001387"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Seattle:General/standing_idle_talking"
          }
        }
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5543f9ad663136b00c001387"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "Hey asshole... See the tape?   That means keep the fuck out!"
      }
      args {
        float_value: 255
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 128
      }
      args {
        float_value: 14
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5543f9ad663136b00c001387"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5545dd00663136680a004dbf"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Scene.CopWarningExit [UB]"
  events {
    ops {
      functionName: "On Region Exit"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5545dcc5663136680a004dbc"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5543f9ad663136b00c001387"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "Gawdamn window lickers... Why can\'t they ever find something else to do."
      }
      args {
        float_value: 255
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 128
      }
      args {
        float_value: 15
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Order Actor to Face Direction"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5543f9ad663136b00c001387"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 3
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5543f9ad663136b00c001387"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Seattle:General/standing_idle_bouncer"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5545dd60663136680a004dc0"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: " "
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "5545ed616631368809002e47"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Pub.Enter"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5545eb6f663136680a004e74"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Actor near Point"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        int_value: 1
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5545ed566631368809002e44"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5545ed5a6631368809002e45"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Pub.Exit"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5545ead5663136680a004e70"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Actor near Point"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        int_value: 1
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5545eb6f663136680a004e74"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5545edd46631368809002e48"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: " "
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "5545f30b6631368809002e4e"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Shelter.Enter"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5545f3036631368809002e4d"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Display Text over Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5545f3036631368809002e4d"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "       [PLACE HOLDER]\nInterior map not complete."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 15
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "5545f3106631368809002e4f"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Shelter.Exit"
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: true
  idRef {
    id: "5545f3106631368809002e50"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: " "
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "554aac5e663136c01000300b"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "LoneStar.Enter"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "554aac4f663136c01000300a"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Actor near Point"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        int_value: 1
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "554aa8c1663136c010003007"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "554aac5e663136c01000300c"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "LoneStar.Exit"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "554aa36e663136c010002ece"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Actor near Point"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        int_value: 1
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "554aaca8663136c01000300f"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "554aac5e663136c01000300d"
  }
  elseActions {
  }
  is_oneshot: false
}
regions {
  name: "cSunnySide"
  position {
    x: -86
    y: -77
    width: 165
    height: 156
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "5541332f3733610410006488"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.25882354
    g: 0.25882354
    b: 0
    a: 1
  }
  ambient_light_color {
    r: 0.4
    g: 0.4
    b: 0.4
    a: 1
  }
  ambience_template: "barrens-day"
  combat_music: "Seattle-Set3-Combat"
  default_music: "Seattle-Set3-Legwork"
  loop_combat_music: true
  loop_default_music: true
  no_fow_in_region: false
}
regions {
  name: "rCopWarning"
  position {
    x: -3
    y: -1
    width: 5
    height: 6
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5545dcc5663136680a004dbc"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "cTail&Ale"
  position {
    x: -137
    y: 16
    width: 16
    height: 16
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "5545ea44663136680a004e6e"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.58823532
    g: 0.23921569
    b: 0.73725492
    a: 1
  }
  ambient_light_color {
    r: 0.36862746
    g: 0.13333334
    b: 0.43529412
    a: 1
  }
  ambience_template: "bar-quiet"
  combat_music: ""
  default_music: "Seattle-Bar03"
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "cLoneStarLobby"
  position {
    x: -157
    y: -54
    width: 26
    height: 33
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "554aa73e663136c010002ffa"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50980395
    g: 0.51764709
    b: 0.12156863
    a: 1
  }
  ambient_light_color {
    r: 0.3137255
    g: 0.3137255
    b: 0.3137255
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: -24
    y: 0
    z: 8
  }
  orientation: ORIENTATION_S
  idRef {
    id: "554132ad3733610410006487"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 0
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: -24
    y: 0
    z: 9
  }
  orientation: ORIENTATION_S
  idRef {
    id: "5543339d6631369009002c54"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 1
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: -25
    y: 0
    z: 8
  }
  orientation: ORIENTATION_S
  idRef {
    id: "554333a06631369009002c55"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 2
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: -25
    y: 0
    z: 9
  }
  orientation: ORIENTATION_S
  idRef {
    id: "554333a36631369009002c56"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 3
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -62
    y: 0
    z: 6
  }
  orientation: ORIENTATION_E
  GeneralTags: "isResident"
  GeneralTags: "isQuest"
  GeneralTags: "isSpawn0"
  displayName: "Resident"
  idRef {
    id: "5543f4e1663136b00c001368"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    interactionIcon: InteractionIcon_Conversation
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Homeless/DwarfMaleHomelessBeard"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "1"
    GeneralTags: "isResident"
    GeneralTags: "isQuest"
    GeneralTags: "isSpawn0"
    pc_spawn_number: -1
    portrait {
      filename: "pc_dwarfmale_02d_beardie"
    }
    karma: 6
    is_prop_character: false
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -74
    y: 0
    z: -37
  }
  orientation: ORIENTATION_W
  GeneralTags: "isResident"
  GeneralTags: "isQuest"
  GeneralTags: "isSpawn1"
  displayName: "Resident"
  idRef {
    id: "5543f988663136b00c00137e"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    interactionIcon: InteractionIcon_Conversation
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Homeless/HumanMaleHomelessBackpack"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "2"
    GeneralTags: "isResident"
    GeneralTags: "isQuest"
    GeneralTags: "isSpawn1"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: "pc_humanmale_11a_hoodie"
    }
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 40
    y: 0
    z: -42
  }
  orientation: ORIENTATION_S
  GeneralTags: "isResident"
  GeneralTags: "isQuest"
  GeneralTags: "isSpawn2"
  displayName: "Resident"
  idRef {
    id: "5543f98b663136b00c00137f"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    interactionIcon: InteractionIcon_Conversation
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Homeless/HumanFemaleHomelessKerchief"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "3"
    GeneralTags: "isResident"
    GeneralTags: "isQuest"
    GeneralTags: "isSpawn2"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: "pc_humanfemale_10a_combatmage"
    }
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -45
    y: 0
    z: 49
  }
  orientation: ORIENTATION_N
  GeneralTags: "isResident"
  GeneralTags: "isQuest"
  GeneralTags: "isSpawn3"
  displayName: "Resident"
  idRef {
    id: "5543f999663136b00c001380"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    interactionIcon: InteractionIcon_Conversation
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Standard/DwarfFemaleAdept"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "4"
    GeneralTags: "isResident"
    GeneralTags: "isQuest"
    GeneralTags: "isSpawn3"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: "pc_dwarffemale_05_sexy"
    }
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 67
    y: 0
    z: 65
  }
  orientation: ORIENTATION_W
  GeneralTags: "isResident"
  GeneralTags: "isQuest"
  GeneralTags: "isSpawn4"
  displayName: "Resident"
  idRef {
    id: "5543f999663136b00c001381"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    interactionIcon: InteractionIcon_Conversation
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Standard/TrollMaleShaman"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "5"
    GeneralTags: "isResident"
    GeneralTags: "isQuest"
    GeneralTags: "isSpawn4"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: "pc_trollmale_04c_shaman"
    }
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 66
    y: 0
    z: -24
  }
  orientation: ORIENTATION_E
  GeneralTags: "isResident"
  GeneralTags: "isQuest"
  GeneralTags: "isSpawn5"
  displayName: "Resident"
  idRef {
    id: "5543f999663136b00c001382"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    interactionIcon: InteractionIcon_Conversation
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Gangers/HumanFemaleGanger_Cutter"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "6"
    GeneralTags: "isResident"
    GeneralTags: "isQuest"
    GeneralTags: "isSpawn5"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: "pc_humanfemale_01c_shavedhead"
    }
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -22
    y: 0
    z: -50
  }
  orientation: ORIENTATION_S
  GeneralTags: "isResident"
  GeneralTags: "isQuest"
  GeneralTags: "isSpawn6"
  displayName: "Resident"
  idRef {
    id: "5543f9ad663136b00c001383"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    interactionIcon: InteractionIcon_Conversation
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Gangers/HumanMaleGanger"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "7"
    GeneralTags: "isResident"
    GeneralTags: "isQuest"
    GeneralTags: "isSpawn6"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: "pc_humanmale_10a_beserker"
    }
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 37
    y: 0
    z: 10
  }
  orientation: ORIENTATION_E
  GeneralTags: "isResident"
  GeneralTags: "isQuest"
  GeneralTags: "isSpawn7"
  displayName: "Resident"
  idRef {
    id: "5543f9ad663136b00c001384"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    interactionIcon: InteractionIcon_Conversation
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Extras/ElfFemaleProstitute"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "8"
    GeneralTags: "isResident"
    GeneralTags: "isQuest"
    GeneralTags: "isSpawn7"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: "pc_elffemale_06b_platinum"
    }
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -30
    y: 0
    z: -21
  }
  orientation: ORIENTATION_N
  GeneralTags: "isResident"
  GeneralTags: "isQuest"
  GeneralTags: "isSpawn8"
  displayName: "Resident"
  idRef {
    id: "5543f9ad663136b00c001385"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    interactionIcon: InteractionIcon_Conversation
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Extras/HumanFemaleWorkingclassLonghairBlond"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Prop Broom"
    }
    team_id: "Civilians"
    char_name: "9"
    GeneralTags: "isResident"
    GeneralTags: "isQuest"
    GeneralTags: "isSpawn8"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: "pc_humanfemale_08_whitehair"
    }
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -34
    y: 0
    z: -33
  }
  orientation: ORIENTATION_S
  GeneralTags: "isResident"
  GeneralTags: "isQuest"
  GeneralTags: "isSpawn9"
  displayName: "Resident"
  idRef {
    id: "5543f9ad663136b00c001386"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    interactionIcon: InteractionIcon_Conversation
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Extras/HumanMaleWorkingclassWindbreakerBlue"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "10"
    GeneralTags: "isResident"
    GeneralTags: "isQuest"
    GeneralTags: "isSpawn9"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: "backer_humanmale_robertorivera_diamondwirealt"
    }
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -3
    y: 0
    z: 7
  }
  orientation: ORIENTATION_E
  GeneralTags: "isQuest"
  GeneralTags: "isSpawn10"
  displayName: "Resident"
  idRef {
    id: "5543f9ad663136b00c001387"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    interactionIcon: InteractionIcon_Conversation
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/OrkLonestarGuard"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "11"
    GeneralTags: "isQuest"
    GeneralTags: "isSpawn10"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: "backer_orkmale_jamesherbert_theodorebustergruberman"
    }
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -11
    y: 0
    z: 29
  }
  orientation: ORIENTATION_W
  GeneralTags: "isResident"
  GeneralTags: "isQuest"
  GeneralTags: "isSpawn11"
  displayName: "Resident"
  idRef {
    id: "5543f9ad663136b00c001388"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    interactionIcon: InteractionIcon_Conversation
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:HavenCivilians/OrkFemaleHavenCivilian_2"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "12"
    GeneralTags: "isResident"
    GeneralTags: "isQuest"
    GeneralTags: "isSpawn11"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: "pc_orkfemale_06"
    }
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 67
    y: 0
    z: 63
  }
  orientation: ORIENTATION_E
  displayName: "ResidentFlavor"
  idRef {
    id: "5545cd9d663136680a004da1"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Spirit/SpiritToxic"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Contained Toxic Spirit"
    pc_spawn_number: -1
    portrait {
      filename: "generic_spirit_toxic"
    }
    karma: 6
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -134.4
    y: 0
    z: 27
  }
  orientation: ORIENTATION_S
  displayName: "Resident"
  idRef {
    id: "5545e963663136680a004e6d"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Standard/ElfMaleGanger"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Bartender"
    pc_spawn_number: -1
    portrait {
      filename: "pc_elffemale_11a"
    }
    karma: 6
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -148
    y: 0
    z: -39
  }
  orientation: ORIENTATION_E
  displayName: "LoneStar"
  idRef {
    id: "554ab3e0663136c010003012"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 3
    interactionIcon: InteractionIcon_Conversation
    interaction_info_text: "Talk to the Desk Sergeant?"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanFemaleLonestarCaptain"
    character_sheet_id: "AGChemie_Cyberzombie_Lv1"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        armor: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        dodge: 0
      }
      specializations {
        rifle: 0
        edged: 0
        unarmed: 0
      }
      archetypeName: "Non-Combatant"
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Sgt. Matthews"
    pc_spawn_number: -1
    portrait {
      filename: "pc_humanfemale_06a_pixie"
    }
    karma: 174
    is_prop_character: false
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "iLegWorkCount"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "iContact_Count"
    typeName: "int"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "bContact1"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "bContact2"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "bContact3"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "bContact4"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "bContact5"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "bContact6"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "bContact7"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "bContact8"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "bContact9"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "bContact10"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "bContact11"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "bContact12"
    typeName: "bool"
  }
}
variables {
  string_value: ""
  variableref_value {
    scope: TsVariableScope_Scene
    name: "sContactSequence"
    typeName: "string"
  }
}
variables {
  string_value: ""
  variableref_value {
    scope: TsVariableScope_Scene
    name: "sRolledNumbers"
    typeName: "string"
  }
}
variables {
  string_value: ""
  variableref_value {
    scope: TsVariableScope_Scene
    name: "sCharacterIntro"
    typeName: "string"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "bLootable_Rifle"
    typeName: "bool"
  }
}
variables {
  bool_value: true
  variableref_value {
    scope: TsVariableScope_Scene
    name: "bCuttersActive"
    typeName: "bool"
  }
}
variables {
  bool_value: true
  variableref_value {
    scope: TsVariableScope_Scene
    name: "bHalloweenersActive"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "bShadowRunnersActive"
    typeName: "bool"
  }
}
variables {
  string_value: "<BLANK>"
  variableref_value {
    scope: TsVariableScope_Scene
    name: "sLoneStarCallName"
    typeName: "string"
  }
}
mapEvents: "eRandomizeContacts"
goals {
  name: "Clear the Warehouse Area"
  type: GoalType_Secondary
  status: GoalStatus_Hidden
  description: "Cleaned out the gangers."
}
worldMapLocation {
  filename: ""
  location {
    x: 0
    y: 0
  }
}
mapName: "SCENE - Sunnyside"
parentStory: ""
scene_title: "Sunnyside Slums"
scene_subtitle: ""
scene_synopsis: ""
scene_image: "marialoading"
scene_continue_button_skip: false
scene_restore_runner_health: true
directional_light_dir {
  x: -0.5
  y: -1
  z: -0.75
}
directional_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
ambient_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
allow_drawn_weapons: false
team_affiliations {
  team_name: "Shadowrunners"
  affiliation: 0
  affiliation: 1
  affiliation: 1
  affiliation: 0
}
team_affiliations {
  team_name: "Gangers"
  affiliation: 1
  affiliation: 0
  affiliation: 1
  affiliation: 0
}
team_affiliations {
  team_name: "LoneStar"
  affiliation: 1
  affiliation: 1
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Civilians"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
scene_dimensions {
  dimension_name: "Default"
}
character_roster {
}
show_hiring_screen_on_scene_load: false
scene_hiring_prerequisites {
  prereq_description: ""
  prereq_conditions {
  }
}
hiring_slot_count: 0
hiring_minimum_karma: 0
hiring_maximum_karma: 0
roster_overrides {
}
use_hiring_cost_warning: false
hiring_average_cost: 0
override_hiring_average_cost: false
show_equip_screen_on_scene_load: false
is_persistant: false
is_persistant_has_value: false
can_move_outside_camera_regions: false
can_start_before_triggers: false
can_use_team_advancement: false

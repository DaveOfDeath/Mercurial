triggers {
  name: "OnMapStart.TeamSelection"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eSelectTeam"
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Wait for Triggers"
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isUnhired"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Random Point Within Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "56bfe1a76631360413006bb0"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "56bfdec56631360413006ba3"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "OnMapStart.Penthouse"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
          }
          args {
            string_value: "str_SpawnPoint"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "EPILOGUE-HAPPY"
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Random Point Within Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "56bfd0e16631360413006b72"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Waypoint on Prop"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "56ada8f6613131e011003a07"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "56bfd5046631360413006b82"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "OnMapStart.Shithouse"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
          }
          args {
            string_value: "str_SpawnPoint"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "EPILOGUE-HAPPY"
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Random Point Within Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "56fcb7d4396630d01d0074b0"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "56ad795f3966305c0b0060c2"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "56fcb79b396630d01d0074af"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "NewTrigger"
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: true
  idRef {
    id: "56bfe2646631360413006bb3"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: " "
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "56bfded66631360413006ba4"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "<PENTHOUSE>"
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "56bfe26e6631360413006bb5"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Penthouse.News"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "56ada8f6613131e011003a07"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Clear Waypoint from Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "56ada8f6613131e011003a07"
          }
        }
      }
    }
    ops {
      functionName: "Display Image In Popup"
      args {
        string_value: "portraits/newsHAPPYPopUp"
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PopupType"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: " News Feed:: Wedding Photo Leaked!"
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "56ada8f6613131e011003a07"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bLeavePenthouse"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Waypoint on Prop"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "56ada8f6613131e011003938"
          }
        }
      }
    }
    ops {
      functionName: "Set Waypoint on Prop"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "56ada8f6613131e0110038e4"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "56bfdc376631360413006b92"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Penthouse.Exit"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "56ada8f6613131e011003938"
          }
        }
      }
    }
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "56ada8f6613131e0110038e4"
          }
        }
      }
    }
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "56ad7a8e3966305c0b006267"
          }
        }
      }
    }
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eYoshirosTransition"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eYoshirosTransition"
          }
        }
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Fade Camera Out"
      args {
        float_value: 0.75
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Random Point Within Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "56bfe2dd6631360413006bb7"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eYoshirosTransition"
          }
        }
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Fade Camera In"
      args {
        float_value: 0.75
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "56bfe73d6631360413006bcd"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Apply Condition Status Effect to Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "56bfe73d6631360413006bcd"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "StatusCondition"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        string_value: "FencePost"
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BuffDebuffType"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: -1
      }
    }
  }
  isActive: true
  idRef {
    id: "56bfe2856631360413006bb6"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: " "
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "56bfe26e6631360413006bb4"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "<SHITHOUSE>"
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "56fcb9c8396630d01d0074ba"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: " "
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "56fcb9bf396630d01d0074b9"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: " "
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "56fcb9da396630d01d0074bb"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "<TEAM SELECTION>"
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "56bfdee26631360413006ba5"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Selection.ElJefe"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eSelectTeam"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "542848a8633464d816001ad5"
          }
          args {
            string_value: "bool_Had_ElJefe"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "56bfd03c6631360413006b50"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Remove Tag from Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isUnhired"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "56bfd03c6631360413006b50"
              }
            }
          }
          args {
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "56bfdeed6631360413006ba6"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Selection.Gunner"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eSelectTeam"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "542848a8633464d816001ad5"
          }
          args {
            string_value: "bool_Had_Gunner"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "56bfd03f6631360413006b51"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Remove Tag from Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isUnhired"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "56bfd03f6631360413006b51"
              }
            }
          }
          args {
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "56bfdfec6631360413006ba8"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Selection.Luna"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eSelectTeam"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "542848a8633464d816001ad5"
          }
          args {
            string_value: "bool_Had_Luna"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "56bfd0426631360413006b52"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Remove Tag from Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isUnhired"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "56bfd0426631360413006b52"
              }
            }
          }
          args {
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "56bfe00e6631360413006ba9"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Selection.Nebel"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eSelectTeam"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "542848a8633464d816001ad5"
          }
          args {
            string_value: "bool_Had_Nebel"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "56bfd0456631360413006b53"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Remove Tag from Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isUnhired"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "56bfd0456631360413006b53"
              }
            }
          }
          args {
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "56bfe0356631360413006baa"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Selection.Padre"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eSelectTeam"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "542848a8633464d816001ad5"
          }
          args {
            string_value: "bool_Had_Padre"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "56bfd0486631360413006b54"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Remove Tag from Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isUnhired"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "56bfd0486631360413006b54"
              }
            }
          }
          args {
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "56bfe03d6631360413006bab"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Selection.Shiver"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eSelectTeam"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "542848a8633464d816001ad5"
          }
          args {
            string_value: "bool_Had_Shiver"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "56bfd04b6631360413006b55"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Remove Tag from Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isUnhired"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "56bfd04b6631360413006b55"
              }
            }
          }
          args {
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "56bfe0486631360413006bac"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Selection.SilverArrow"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eSelectTeam"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "542848a8633464d816001ad5"
          }
          args {
            string_value: "bool_Had_SilverArrow"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "56bfd04e6631360413006b56"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Remove Tag from Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isUnhired"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "56bfd04e6631360413006b56"
              }
            }
          }
          args {
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "56bfe0506631360413006bad"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Selection.Sucio"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eSelectTeam"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "542848a8633464d816001ad5"
          }
          args {
            string_value: "bool_Had_Sucio"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "56bfd0516631360413006b57"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Remove Tag from Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isUnhired"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "56bfd0516631360413006b57"
              }
            }
          }
          args {
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "56bfe0576631360413006bae"
  }
  elseActions {
  }
  is_oneshot: true
}
regions {
  name: "r_Shithouse_Playerstart"
  position {
    x: 10
    y: 2
    width: 2
    height: 2
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "56ad795f3966305c0b0060c2"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "Condo Cam"
  position {
    x: 3
    y: -111
    width: 23
    height: 16
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "56bf99006631365c1100694c"
  }
  highlight_color {
    r: 0.11372549
    g: 0.035294119
    b: 0.054901961
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.29803923
    g: 0.29803923
    b: 0.29803923
    a: 1
  }
  ambient_light_color {
    r: 0.35686275
    g: 0.25882354
    b: 0.22352941
    a: 1
  }
  ambience_template: "downtown-night"
  combat_music: ""
  default_music: "Berlin-Lab-Legwork"
  loop_combat_music: true
  loop_default_music: true
  no_fow_in_region: false
}
regions {
  name: "rStartCell"
  position {
    x: 30
    y: -54
    width: 4
    height: 6
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "56bfd0946631360413006b5a"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "rPenthouse_Start"
  position {
    x: 11
    y: -110
    width: 5
    height: 5
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "56bfd0e16631360413006b72"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "rYoshirosCrewStart"
  position {
    x: 73
    y: -32
    width: 11
    height: 10
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "56bfe1a76631360413006bb0"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "rYoshirosPlayerStart"
  position {
    x: 85
    y: -20
    width: 3
    height: 3
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "56bfe2dd6631360413006bb7"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "cYoshiros"
  position {
    x: 72
    y: -35
    width: 19
    height: 34
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "56bfe4b06631360413006bb8"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.33333334
    g: 0
    b: 0.49803922
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: "bar-quiet"
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "rShithouse_Start"
  position {
    x: 10
    y: -7
    width: 4
    height: 5
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "56fcb7d4396630d01d0074b0"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 30
    y: 0
    z: -52
  }
  orientation: ORIENTATION_N
  displayName: "Team"
  idRef {
    id: "56bfd03c6631360413006b50"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Standard/OrkMaleRigger"
    character_sheet_id: "Errant_Lv1_Rigger"
    equipment_sheet_id: "MERCURIAL_ElJefeGear_Lv3"
    character_mod {
      stats {
        body: 2
        quickness: -1
        charisma: -1
        intelligence: 2
        essence: -2
        hp: 20
        armor: 4
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 2
        close_combat: 1
        drone_control: 2
        etiquette_security: 1
      }
      specializations {
        rifle: 2
        drone_combat: 3
      }
      archetypeName: "Guard - Protect"
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "El Jefe"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    cyberware_eyes: "Vision Magnification Eyes"
    cyberware_jack: "Datajack"
    cyberware_body: "Bone Lacing Kevlar 2"
    portrait {
      filename: "pc_orkmale_07_shotgun"
    }
    karma: 3
    hiring_cost_override: 0
    hiring_tag: "Rigger"
    id: "MERCURIAL_Crew_ElJefe_Lv3"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 30
    y: 0
    z: -51
  }
  orientation: ORIENTATION_W
  displayName: "Team"
  idRef {
    id: "56bfd03f6631360413006b51"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Security/TrollFemaleSecurity"
    character_sheet_id: "Lvl1_Troll_Samurai"
    equipment_sheet_id: "MERCURIAL_GunnerGear_Lv3"
    character_mod {
      stats {
        body: 1
        quickness: -1
        intelligence: 0
        willpower: 0
        hp: 0
        ap: 0
        armor: 3
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 4
        close_combat: 1
        throwing_weapons: 1
        biotech: 0
        dodge: 1
        etiquette_corporate: 1
        etiquette_shadowrunner: 1
      }
      specializations {
        rifle: 4
        shotgun: -1
        unarmed: 1
      }
      archetypeName: "Guard - Protect"
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Gunner"
    GeneralTags: "isUnhired"
    GeneralTags: "isGunner"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    revivable_value: true
    cyberware_jack: "Datajack"
    cyberware_body: "Bone Lacing Kevlar 2"
    cyberware_left_arm: "Berlin_Auto-Injector (Hyper)"
    portrait {
      filename: "pc_trollfemale_06b_beauty"
    }
    karma: 3
    hiring_cost_override: 0
    hiring_tag: "Street Samurai"
    id: "MERCURIAL_Crew_Gunner_Lv3"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 30
    y: 0
    z: -50
  }
  orientation: ORIENTATION_N
  displayName: "Team"
  idRef {
    id: "56bfd0426631360413006b52"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Story/StoryShaman"
    character_sheet_id: "CG Human Adept"
    equipment_sheet_id: "MERCURIAL_LunaGear_Lv3"
    character_mod {
      stats {
        body: 0
        quickness: 1
        strength: 1
        charisma: 0
        intelligence: 0
        willpower: 1
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 4
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 3
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 2
        dodge: 2
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 3
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 1
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 4
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Luna"
    GeneralTags: "isUnhired"
    GeneralTags: "isLuna"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    revivable_value: true
    portrait {
      filename: "npc_humanfemale_shamaninvestigator"
    }
    karma: 3
    hiring_cost_override: 0
    hiring_tag: "Physical Adept"
    scale_character_sheet: true
    id: "MERCURIAL_Crew_Luna_Lv3"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 30
    y: 0
    z: -49
  }
  orientation: ORIENTATION_W
  displayName: "Team"
  idRef {
    id: "56bfd0456631360413006b53"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Story/WeaponsDealer"
    character_sheet_id: "CG Human Decker"
    equipment_sheet_id: "MERCURIAL_NebelGear_Lv3"
    character_mod {
      stats {
        body: 1
        quickness: 0
        strength: 1
        charisma: 1
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 10
        ap: 0
        armor: 4
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 3
        throwing_weapons: 3
        spellcasting: 0
        decking: 3
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 1
        dodge: 2
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 1
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 3
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Nebel"
    GeneralTags: "isUnhired"
    GeneralTags: "isNebel"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    revivable_value: true
    cyberware_eyes: "Berlin_Laser Designator"
    cyberware_jack: "Datajack"
    cyberware_body: "Berlin_Tailored Pheromones (Bioware)"
    cyberware_right_arm: "Obvious Cyberarm 2"
    cyberware_left_leg: "Enhanced Articulation"
    portrait {
      filename: "npc_humanfemale_weaponstechdealer"
    }
    karma: 3
    hiring_cost_override: 0
    hiring_tag: "Decker"
    scale_character_sheet: true
    id: "MERCURIAL_Crew_Nebel_Lv3"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 31
    y: 0
    z: -52
  }
  orientation: ORIENTATION_S
  displayName: "Team"
  idRef {
    id: "56bfd0486631360413006b54"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Story/Priest"
    character_sheet_id: "Lvl1_Human_Mage"
    equipment_sheet_id: "MERCURIAL_PadreGear_Lv3"
    character_mod {
      stats {
        body: 2
        quickness: 1
        strength: 0
        charisma: 1
        intelligence: 1
        willpower: 3
        hp: 20
        armor: 4
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 1
        close_combat: 2
        spellcasting: 4
        conjuring: 0
        biotech: 2
        dodge: 2
        etiquette_academic: 1
      }
      specializations {
      }
      archetypeName: "Guard - Protect"
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Padre"
    GeneralTags: "isUnhired"
    GeneralTags: "isPadre"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    revivable_value: true
    portrait {
      filename: "backer_humanmale_markkalinic"
    }
    karma: 3
    hiring_cost_override: 0
    hiring_tag: "Hermetic Mage"
    id: "MERCURIAL_Crew_Padre_Lv3"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 31
    y: 0
    z: -51
  }
  orientation: ORIENTATION_E
  displayName: "Team"
  idRef {
    id: "56bfd04b6631360413006b55"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:Aztechnology/ElfMaleAztechGuard"
    character_sheet_id: "CG Elf Street Samurai"
    equipment_sheet_id: "MERCURIAL_ShiverGear_Lv3"
    character_mod {
      stats {
        body: 1
        quickness: 2
        strength: 0
        charisma: -1
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 10
        ap: 0
        armor: 5
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 4
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 2
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 5
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Shiver"
    GeneralTags: "isUnhired"
    GeneralTags: "isShiver"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    revivable_value: true
    cyberware_eyes: "Vision Magnification Eyes"
    cyberware_jack: "Datajack"
    cyberware_body: "Wired Reflexes"
    cyberware_left_leg: "Enhanced Articulation"
    portrait {
      filename: "Shiver"
    }
    karma: 3
    hiring_cost_override: 0
    hiring_tag: "Street Samurai"
    scale_character_sheet: true
    id: "MERCURIAL_Crew_Shiver_Lv3"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 31
    y: 0
    z: -50
  }
  orientation: ORIENTATION_E
  displayName: "Team"
  idRef {
    id: "56bfd04e6631360413006b56"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:Story/HumanMaleAmsel"
    character_sheet_id: "Lvl1_Merc_Dwarf_CombatDecker"
    equipment_sheet_id: "MERCURIAL_SilverArrowGear_Lv3"
    character_mod {
      stats {
        body: 1
        intelligence: 0
        willpower: -3
        essence: 0
        magic: -6
        hp: 10
        armor: 3
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 2
        close_combat: 0
        throwing_weapons: 0
        decking: 4
        biotech: 1
        dodge: 2
        etiquette_security: 1
      }
      specializations {
        pistol: 2
        esp_control: 4
      }
      archetypeName: "Guard - Protect"
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Silver Arrow"
    GeneralTags: "isUnhired"
    GeneralTags: "isSilverArrow"
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    revivable_value: true
    cyberware_eyes: "Berlin_Laser Designator"
    cyberware_jack: "Datajack"
    portrait {
      filename: "npc_humanmale_blister"
    }
    karma: 3
    hiring_cost_override: 0
    hiring_tag: "Decker"
    id: "MERCURIAL_Crew_SilverArrow_Lv3"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 31
    y: 0
    z: -49
  }
  orientation: ORIENTATION_S
  displayName: "Team"
  idRef {
    id: "56bfd0516631360413006b57"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Homeless/DwarfMaleHomelessJacket"
    character_sheet_id: "CG Dwarf Street Samurai"
    equipment_sheet_id: "MERCURIAL_SucioGear_Lv3"
    character_mod {
      stats {
        body: 2
        quickness: 1
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 20
        ap: 0
        armor: 5
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 3
        close_combat: 0
        throwing_weapons: 2
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 1
        dodge: 2
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 4
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Sucio"
    GeneralTags: "isUnhired"
    GeneralTags: "isSucio"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    revivable_value: true
    cyberware_eyes: "Berlin_BrightLight System"
    cyberware_jack: "Datajack"
    cyberware_body: "Dermal Plating Mk 1"
    cyberware_left_arm: "Berlin_Auto-Injector (Bliss)"
    cyberware_right_arm: "Berlin_Auto-Injector (Hyper)"
    cyberware_left_leg: "Berlin_Hydraulic Jack Mk 2"
    cyberware_right_leg: "Enhanced Articulation"
    portrait {
      filename: "backer_humanmale_nikpoenisch"
    }
    karma: 3
    hiring_cost_override: 0
    hiring_tag: "Street Samurai"
    scale_character_sheet: true
    id: "MERCURIAL_Crew_Sucio_Lv3"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 33
    y: 0
    z: -54
  }
  orientation: ORIENTATION_E
  idRef {
    id: "56bfd06e6631360413006b58"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/HumanFemale"
    character_sheet_id: "Lvl3_Elf_Samurai"
    equipment_sheet_id: "NPC_MariaMercurial_OffRUN"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 2
        magic: 0
        hp: 0
        ap: 1
        armor: 1
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 3
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
        is_fearless: 0
      }
      skills {
        ranged_combat: 3
        close_combat: -1
        throwing_weapons: -3
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 1
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 1
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 3
        rifle: 0
        shotgun: 0
        smg: 4
        edged: -3
        unarmed: 3
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeBoss
      attackRandom: AttackStyle_BestOnly
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Maria Mercurial"
    GeneralTags: "isMercurial"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    can_combat_shove: true
    cyberware_jack: "Datajack"
    cyberware_left_arm: "Obvious Cyberarm"
    cyberware_right_arm: "Obvious Cyberarm"
    cyberware_left_leg: "Obvious Cyberleg 2"
    cyberware_right_leg: "Obvious Cyberleg 2"
    portrait {
      filename: "geeked_maria_amazon"
    }
    portrait_code_override: "s4h7c1"
    karma: 103
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 32
    y: 0
    z: -54
  }
  orientation: ORIENTATION_E
  idRef {
    id: "56bfd0756631360413006b59"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Story/MrJohnson"
    character_sheet_id: "Lvl2_Merc_Human_Assassin"
    character_mod {
      stats {
        body: -1
        quickness: -1
        strength: 1
        charisma: 1
        intelligence: 1
        willpower: -1
        essence: 0
        magic: -6
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 1
        close_combat: -1
        throwing_weapons: -2
        spellcasting: 0
        decking: 2
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 2
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 6
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 2
        etiquette_academic: 0
      }
      specializations {
        pistol: 1
        rifle: 0
        shotgun: 2
        smg: -1
        edged: -1
        unarmed: 1
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Pi 1 Fichetti Security 500"
    }
    equipment {
      prefab_name: "Sh 3 Defiance T-250"
    }
    team_id: "Civilians"
    char_name: "Armando Hernandez"
    GeneralTags: "isHernandez"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "backer_humanmale_evanjameshawco"
    }
    description_bio: ""
    portrait_code_override: "s4h1c4"
    karma: 82
    hiring_cost_override: 1500
    hiring_tag: "Marias Manager"
    is_backer: true
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 32
    y: 0
    z: -50
  }
  orientation: ORIENTATION_N
  displayName: "Player"
  idRef {
    id: "56bfe1156631360413006baf"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 0
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 90
    y: 1
    z: -19
  }
  orientation: ORIENTATION_N
  displayName: "Watcher"
  idRef {
    id: "56bfe73d6631360413006bcd"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/InvisibleActor"
    character_sheet_id: "AGChemie_Cyberzombie_Lv1"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        armor: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        dodge: 0
      }
      specializations {
        rifle: 0
        edged: 0
        unarmed: 0
      }
      archetypeName: "Non-Combatant"
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Sign"
    pc_spawn_number: -1
    ai_ignores: true
    portrait {
      filename: ""
    }
    karma: 174
    is_prop_character: true
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "bLeavePenthouse"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "bEndGame"
    typeName: "bool"
  }
}
variables {
  bool_value: true
  variableref_value {
    scope: TsVariableScope_Scene
    name: "b_Endgame"
    typeName: "bool"
  }
}
mapEvents: "eSelectTeam"
mapEvents: "eYoshirosTransition"
senseTags: "isUnhired"
senseTags: "isDoneTalking"
worldMapLocation {
  filename: ""
  location {
    x: 0
    y: 0
  }
}
mapName: "SCENE - Epilogue"
parentStory: ""
scene_title: "Postlude..."
scene_subtitle: "Epilogue for Thomas"
scene_synopsis: "$(story.str_SceneDetails)"
scene_image: "marialoading"
scene_continue_button_skip: false
scene_restore_runner_health: true
directional_light_dir {
  x: -0.5
  y: -1
  z: -0.75
}
directional_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
ambient_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
allow_drawn_weapons: false
team_affiliations {
  team_name: "Shadowrunners"
  affiliation: 0
  affiliation: 1
  affiliation: 1
  affiliation: 0
}
team_affiliations {
  team_name: "Gangers"
  affiliation: 1
  affiliation: 0
  affiliation: 1
  affiliation: 0
}
team_affiliations {
  team_name: "LoneStar"
  affiliation: 1
  affiliation: 1
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Civilians"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
scene_dimensions {
  dimension_name: "Default"
}
character_roster {
}
show_hiring_screen_on_scene_load: false
scene_hiring_prerequisites {
  prereq_description: ""
  prereq_conditions {
  }
}
hiring_slot_count: 0
hiring_minimum_karma: 0
hiring_maximum_karma: 0
roster_overrides {
}
use_hiring_cost_warning: false
hiring_average_cost: 99999
override_hiring_average_cost: true
show_equip_screen_on_scene_load: false
is_persistant: false
is_persistant_has_value: false
can_move_outside_camera_regions: false
can_start_before_triggers: false
can_use_team_advancement: false

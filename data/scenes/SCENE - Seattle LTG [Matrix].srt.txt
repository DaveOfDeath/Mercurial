triggers {
  name: "Mapload"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "54cd48d0613131bc1e0024d3"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "54cd8570613131bc1e002668"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "NotGoodEnough"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eve_Minions"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to become a Non-Combatant"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "54cda231613131700e000847"
              }
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "54cda231613131700e000847"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "repairing"
          }
          args {
            string_value: "repairing"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "54cea6d1613131c01c006e5f"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Seattle:General/decking_idle"
          }
        }
      }
    }
    ops {
      functionName: "Enforce Actor Current Orders"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "54cea6d1613131c01c006e5f"
              }
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Patrol"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "54ceae90613131c01c006e63"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (PatrolRoute)"
          args {
            string_value: "54ceaaf4613131c01c006e60"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54cda277613131700e000848"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "  Load-Doghouse"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
          }
          args {
            string_value: "str_SpawnPoint"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "MATRIX-DOGHOUSE"
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Matrix_Doghouse"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "54cd47b0613131bc1e002497"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54cd48d0613131bc1e0024d3"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "  Load-Penthouse"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
          }
          args {
            string_value: "str_SpawnPoint"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "MATRIX-PENTHOUSE"
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Matrix_Doghouse"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "54cd7bbd613131bc1e00252c"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Actor Wander Range"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "PenthouseIC"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        int_value: 5
      }
    }
    ops {
      functionName: "Order Actor to Patrol"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "PenthouseIC"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (PatrolRoute)"
          args {
            string_value: "54cdb802613131700e0009c1"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54cd8570613131bc1e002668"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "   Hacking Hernandez"
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: true
  idRef {
    id: "54cda2a3613131700e000849"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "   Hacking Foley"
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: true
  idRef {
    id: "54cda2a5613131700e00084a"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Minions.SilverArrow"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eve_Minions"
      }
    }
  }
  conditions {
    ops {
      functionName: "AND"
      args {
        call_value {
          functionName: "Comparison (bool)"
          args {
            call_value {
              functionName: "Get Story Variable (bool)"
              args {
                string_value: "542848a8633464d816001ad5"
              }
              args {
                string_value: "bool_isAlive_SilverArrow"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "bool"
              }
              args {
                int_value: 1
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Comparison (bool)"
          args {
            call_value {
              functionName: "Get Story Variable (bool)"
              args {
                string_value: "542848a8633464d816001ad5"
              }
              args {
                string_value: "bool_isHired_SilverAro"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "bool"
              }
              args {
                int_value: 1
              }
            }
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "54cdab97613131700e000877"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Add Tag to Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "MainGuy"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "54cdab97613131700e000877"
              }
            }
          }
          args {
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54cdab17613131700e000876"
  }
  elseActions {
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "54cdab97613131700e000877"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "54cdabd0613131700e000879"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Tag to Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "MainGuy"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "54cdab97613131700e000878"
              }
            }
          }
          args {
          }
        }
      }
    }
  }
  is_oneshot: true
}
triggers {
  name: "Minions.Nebel"
  events {
  }
  conditions {
    ops {
      functionName: "AND"
      args {
        call_value {
          functionName: "Comparison (bool)"
          args {
            call_value {
              functionName: "Get Story Variable (bool)"
              args {
                string_value: "542848a8633464d816001ad5"
              }
              args {
                string_value: "bool_isAlive_Nebel"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "bool"
              }
              args {
                int_value: 1
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Comparison (bool)"
          args {
            call_value {
              functionName: "Get Story Variable (bool)"
              args {
                string_value: "542848a8633464d816001ad5"
              }
              args {
                string_value: "bool_isHired_Nebel"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "bool"
              }
              args {
                int_value: 1
              }
            }
          }
        }
      }
    }
  }
  actions {
  }
  isActive: true
  idRef {
    id: "54cdabd0613131700e000879"
  }
  elseActions {
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "54cdab97613131700e000878"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  is_oneshot: true
}
triggers {
  name: "Minions.None"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eve_Minions"
      }
    }
  }
  conditions {
    ops {
      functionName: "OR"
      args {
        call_value {
          functionName: "AND"
          args {
            call_value {
              functionName: "Comparison (bool)"
              args {
                call_value {
                  functionName: "Get Story Variable (bool)"
                  args {
                    string_value: "542848a8633464d816001ad5"
                  }
                  args {
                    string_value: "bool_isAlive_Nebel"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "IsOrIsNot"
                  }
                  args {
                    int_value: 1
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "bool"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Comparison (bool)"
              args {
                call_value {
                  functionName: "Get Story Variable (bool)"
                  args {
                    string_value: "542848a8633464d816001ad5"
                  }
                  args {
                    string_value: "bool_isAlive_SilverArrow"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "IsOrIsNot"
                  }
                  args {
                    int_value: 1
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "bool"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "AND"
          args {
            call_value {
              functionName: "Comparison (bool)"
              args {
                call_value {
                  functionName: "Get Story Variable (bool)"
                  args {
                    string_value: "542848a8633464d816001ad5"
                  }
                  args {
                    string_value: "bool_isHired_Nebel"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "IsOrIsNot"
                  }
                  args {
                    int_value: 1
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "bool"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Comparison (bool)"
              args {
                call_value {
                  functionName: "Get Story Variable (bool)"
                  args {
                    string_value: "542848a8633464d816001ad5"
                  }
                  args {
                    string_value: "bool_isHired_SilverAro"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "IsOrIsNot"
                  }
                  args {
                    int_value: 1
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "bool"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add Tag to Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "MainGuy"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54cdad56613131700e00087c"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Minions.RelocateDoghouse"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eve_Minions"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Matrix_Doghouse"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "54cd47b0613131bc1e002497"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Force-Use Interactable Object (with Actor)"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "54cd4734613131bc1e002460"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "54cdab97613131700e000877"
          }
        }
      }
    }
    ops {
      functionName: "Force-Use Interactable Object (with Actor)"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "54cd4734613131bc1e002460"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "54cdab97613131700e000878"
          }
        }
      }
    }
    ops {
      functionName: "Force-Use Interactable Object (with Actor)"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "54cd4734613131bc1e002460"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54cdaf9b613131700e00087e"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Minions.RelocatePenthouse"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eve_Minions"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Matrix_Doghouse"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "54cd7bbd613131bc1e00252c"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Force-Use Interactable Object (with Actor)"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "54cd8ee9613131700e0007d2"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "54cdab97613131700e000877"
          }
        }
      }
    }
    ops {
      functionName: "Force-Use Interactable Object (with Actor)"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "54cd8ee9613131700e0007d2"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "54cdab97613131700e000878"
          }
        }
      }
    }
    ops {
      functionName: "Force-Use Interactable Object (with Actor)"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "54cd8ee9613131700e0007d2"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54cdb008613131700e000880"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "FLOP"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eve_FLOP"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Move Prop with Speed"
      args {
        call_value {
          functionName: "Nearest Tagged Prop to Prop"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "FloatingPointOperation"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "53e47699373361dc060051d5"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Specified Point (3D)"
          args {
            float_value: 0
          }
          args {
            call_value {
              functionName: "Random (float)"
              args {
                float_value: -1
              }
              args {
                float_value: 2
              }
            }
          }
          args {
            float_value: 0
          }
        }
      }
      args {
        float_value: 0.01
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eve_FLOP"
          }
        }
      }
      args {
        call_value {
          functionName: "Random (float)"
          args {
            float_value: 10
          }
          args {
            float_value: 60
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54cda37d613131700e000851"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "LeavePenthouse"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "53e4dc1f373361900c0079a1"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Turn Mode"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TurnBasedOrFreeMove"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "SeattleLTG"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "54ceb733613131c01c006e6d"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54cda436613131700e000853"
  }
  elseActions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "54ceb733613131c01c006e6d"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  is_oneshot: true
}
triggers {
  name: "EnterPenthouse"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "54cd9242613131700e0007e3"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Turn Mode"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TurnBasedOrFreeMove"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "SeattleLTG"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "54ceb755613131c01c006e6e"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54ceb7db613131c01c006e6f"
  }
  elseActions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "54ceb755613131c01c006e6e"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  is_oneshot: true
}
triggers {
  name: "LeaveDoghouse"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "53e51d42373361900c007bf5"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Delete Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "53e51d42373361900c007bf5"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54cda44b613131700e000855"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "EnterHackedNode"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "54cd7f7a613131bc1e002617"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Actor Consciousness"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "54cd8151613131bc1e002661"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Consciousness"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Delete Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "54cd7f7a613131bc1e002617"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54cda454613131700e000856"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Resonance Well"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "54cda49e613131700e000859"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Specialization"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BaseOrCurrent"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorSpecializations"
          }
          args {
            int_value: 6
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "54cdac62613131700e00087b"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor near Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "54cdac62613131700e00087b"
              }
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 2
      }
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Prop"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "MainGuy"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "54cda49e613131700e000859"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54cda50a613131700e00085b"
  }
  elseActions {
    ops {
      functionName: "Set Prop Visible"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "54cda5d8613131700e00085c"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "54cda49e613131700e000859"
          }
        }
      }
    }
  }
  is_oneshot: true
}
triggers {
  name: "Matrix_Exit"
  events {
    ops {
      functionName: "On Host Jacked Out"
    }
  }
  conditions {
    ops {
      functionName: "OR"
      args {
        call_value {
          functionName: "Actor is Jacked in to Matrix Dimension"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "SeattleLTG"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "OR"
          args {
            call_value {
              functionName: "Actor is Jacked in to Matrix Dimension"
              args {
                call_value {
                  functionName: "Get Map Item (Actor)"
                  args {
                    string_value: "54cdab97613131700e000877"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "IsOrIsNot"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "SeattleLTG"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Actor is Jacked in to Matrix Dimension"
              args {
                call_value {
                  functionName: "Get Map Item (Actor)"
                  args {
                    string_value: "54cdab97613131700e000878"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "IsOrIsNot"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "SeattleLTG"
                  }
                }
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Evaluate Team Survival Percentage"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 100
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "SeattleLTG"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "54ceba27613131c01c006e71"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "54ceaf76613131c01c006e64"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54cdac01613131700e00087a"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Matrix_Exit.Penthouse"
  events {
    ops {
      functionName: "On Combat Exited"
    }
  }
  conditions {
    ops {
      functionName: "AND"
      args {
        call_value {
          functionName: "Evaluate Team Survival Percentage"
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Comparison Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            int_value: 100
          }
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "SeattleLTG"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Comparison (string)"
          args {
            call_value {
              functionName: "Get Story Variable (string)"
              args {
                string_value: "542848a8633464d816001ad5"
              }
              args {
                string_value: "str_SpawnPoint"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            string_value: "MATRIX-PENTHOUSE"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "542848a8633464d816001ad5"
          }
          args {
            string_value: "str_SceneTitle"
          }
        }
      }
      args {
        string_value: "Dumpshock - Mercurial\'s Penthouse"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "542848a8633464d816001ad5"
          }
          args {
            string_value: "str_SceneDetails"
          }
        }
      }
      args {
      }
    }
    ops {
      functionName: "Open Scene"
      args {
        call_value {
          functionName: "Get Map Item (Scene)"
          args {
            string_value: "HUB - Penthouse"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54ceaf76613131c01c006e64"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Matrix_Exit.Doghouse"
  events {
    ops {
      functionName: "On Combat Exited"
    }
  }
  conditions {
    ops {
      functionName: "AND"
      args {
        call_value {
          functionName: "Evaluate Team Survival Percentage"
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Comparison Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            int_value: 100
          }
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "SeattleLTG"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Comparison (string)"
          args {
            call_value {
              functionName: "Get Story Variable (string)"
              args {
                string_value: "542848a8633464d816001ad5"
              }
              args {
                string_value: "str_SpawnPoint"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            string_value: "MATRIX-DOGHOUSE"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "542848a8633464d816001ad5"
          }
          args {
            string_value: "str_SceneTitle"
          }
        }
      }
      args {
        string_value: "Dumpshock - The Doghouse"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "542848a8633464d816001ad5"
          }
          args {
            string_value: "str_SceneDetails"
          }
        }
      }
      args {
      }
    }
    ops {
      functionName: "Open Scene"
      args {
        call_value {
          functionName: "Get Map Item (Scene)"
          args {
            string_value: "HUB - Penthouse"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54ceba27613131c01c006e71"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Core1.1"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "53e51e13373361900c007bf9"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_Core1"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_Core1"
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bool_1Up"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Move Prop with Speed"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "53e51e13373361900c007bf9"
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "54cdbaeb613131700e0009c5"
              }
            }
          }
        }
      }
      args {
        float_value: 0.05
      }
    }
  }
  isActive: true
  idRef {
    id: "54cdba5f613131700e0009c4"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Core1.Up2"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "53e51e13373361900c007bf9"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_Core1"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bool_1Up"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_Core1"
          }
        }
      }
      args {
        int_value: 3
      }
    }
    ops {
      functionName: "Move Prop with Speed"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "53e51e13373361900c007bf9"
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "54cdbaee613131700e0009c6"
              }
            }
          }
        }
      }
      args {
        float_value: 0.05
      }
    }
  }
  isActive: true
  idRef {
    id: "54cdbcd1613131700e0009d1"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Core1.Down2"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "53e51e13373361900c007bf9"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_Core1"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bool_1Up"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_Core1"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Move Prop with Speed"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "53e51e13373361900c007bf9"
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "54cdbafb613131700e0009ca"
              }
            }
          }
        }
      }
      args {
        float_value: 0.05
      }
    }
  }
  isActive: true
  idRef {
    id: "54cdbced613131700e0009d3"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Core1.3"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "53e51e13373361900c007bf9"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_Core1"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 3
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_Core1"
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Move Prop with Speed"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "53e51e13373361900c007bf9"
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "54cdbaeb613131700e0009c5"
              }
            }
          }
        }
      }
      args {
        float_value: 0.05
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bool_1Up"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54cdbcd4613131700e0009d2"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Core2.1"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "53e51ae2373361900c007be0"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_Core2"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_Core2"
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bool_2up"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Move Prop with Speed"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "53e51e13373361900c007bf9"
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "54cdbaf3613131700e0009c8"
              }
            }
          }
        }
      }
      args {
        float_value: 0.05
      }
    }
  }
  isActive: true
  idRef {
    id: "54cdbd8e613131700e0009d4"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Core2.Up2"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "53e51ae2373361900c007be0"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_Core2"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bool_2up"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_Core2"
          }
        }
      }
      args {
        int_value: 3
      }
    }
    ops {
      functionName: "Move Prop with Speed"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "53e51ae2373361900c007be0"
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "54cdbaf5613131700e0009c9"
              }
            }
          }
        }
      }
      args {
        float_value: 0.05
      }
    }
  }
  isActive: true
  idRef {
    id: "54cdbd8e613131700e0009d5"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Core2.Down2"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "53e51ae2373361900c007be0"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_Core2"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bool_2up"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_Core1"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Move Prop with Speed"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "53e51e13373361900c007bf9"
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "54cdbafb613131700e0009ca"
              }
            }
          }
        }
      }
      args {
        float_value: 0.05
      }
    }
  }
  isActive: true
  idRef {
    id: "54cdbd8e613131700e0009d6"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Core2.3"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "53e51ae2373361900c007be0"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_Core2"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 3
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "int_Core1"
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Move Prop with Speed"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "53e51ae2373361900c007be0"
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "54cdbaf5613131700e0009c9"
              }
            }
          }
        }
      }
      args {
        float_value: 0.05
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bool_2up"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54cdbd8e613131700e0009d7"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "FreewayTraffic"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Actor In Passive Mode"
      args {
        call_value {
          functionName: "All Actors Including Some"
          args {
            call_value {
              functionName: "All Actors Within Area"
              args {
                call_value {
                  functionName: "Area: Region"
                  args {
                    call_value {
                      functionName: "Get Map Item (Region)"
                      args {
                        string_value: "54cdb57d613131700e0009b0"
                      }
                    }
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "All Actors Within Area"
              args {
                call_value {
                  functionName: "Area: Region"
                  args {
                    call_value {
                      functionName: "Get Map Item (Region)"
                      args {
                        string_value: "54cdb596613131700e0009b1"
                      }
                    }
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Actor Run Speed"
      args {
        call_value {
          functionName: "All Actors Within Area"
          args {
            call_value {
              functionName: "Area: Region"
              args {
                call_value {
                  functionName: "Get Map Item (Region)"
                  args {
                    string_value: "54cdb57d613131700e0009b0"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "RunSpeedMethod"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Actor Run Speed"
      args {
        call_value {
          functionName: "All Actors Within Area"
          args {
            call_value {
              functionName: "Area: Region"
              args {
                call_value {
                  functionName: "Get Map Item (Region)"
                  args {
                    string_value: "54cdb596613131700e0009b1"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "RunSpeedMethod"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Move To (Region)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Random Actor within Area"
              args {
                call_value {
                  functionName: "Area: Region"
                  args {
                    call_value {
                      functionName: "Get Map Item (Region)"
                      args {
                        string_value: "54cdb57d613131700e0009b0"
                      }
                    }
                  }
                }
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "54cdb534613131700e0009ae"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Move To (Region)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Random Actor within Area"
              args {
                call_value {
                  functionName: "Area: Region"
                  args {
                    call_value {
                      functionName: "Get Map Item (Region)"
                      args {
                        string_value: "54cdb596613131700e0009b1"
                      }
                    }
                  }
                }
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "54cdb564613131700e0009af"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54cec5f8613131c01c006e72"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "FreewayOff_Ramp.W"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "54cdb534613131700e0009ae"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Random Point Within Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "54cdb57d613131700e0009b0"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "No Effect"
    }
  }
  isActive: true
  idRef {
    id: "54cec6b6613131c01c006e74"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "FreewayOff_Ramp.E"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "54cdb534613131700e0009ae"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Random Point Within Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "54cdb57d613131700e0009b0"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "No Effect"
    }
  }
  isActive: true
  idRef {
    id: "54cec9ad613131c01c006e75"
  }
  elseActions {
  }
  is_oneshot: false
}
regions {
  name: "Doghouse"
  position {
    x: 78
    y: 156
    width: 6
    height: 4
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "54cd47b0613131bc1e002497"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "Spawn"
  position {
    x: 110
    y: 155
    width: 4
    height: 5
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "54cd4898613131bc1e0024d1"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "Penthouse"
  position {
    x: 140
    y: 153
    width: 7
    height: 6
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "54cd7bbd613131bc1e00252c"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "SuperhighwayEnd_W"
  position {
    x: 13
    y: -20
    width: 3
    height: 3
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "54cdb534613131700e0009ae"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "SuperhighwayEnd_E"
  position {
    x: 13
    y: 92
    width: 3
    height: 3
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "54cdb564613131700e0009af"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "SuperhighwayStart_E"
  position {
    x: 13
    y: 88
    width: 3
    height: 2
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "54cdb57d613131700e0009b0"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "SuperhighwayStart_W"
  position {
    x: 13
    y: -15
    width: 3
    height: 2
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "54cdb596613131700e0009b1"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "Penthouse_Doormat"
  position {
    x: 80
    y: 20
    width: 2
    height: 4
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "54ceb733613131c01c006e6d"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "Penthouse_Mudroom"
  position {
    x: 110
    y: 20
    width: 2
    height: 4
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "54ceb755613131c01c006e6e"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
patrolRoutes {
  name: "Doghouse Firewall"
  pathType: 0
  nodes {
    position {
      x: 51
      z: 76
    }
    index: 0
  }
  nodes {
    position {
      x: 54
      z: 76
    }
    index: 1
  }
  nodes {
    position {
      x: 54
      z: 81
    }
    index: 2
  }
  nodes {
    position {
      x: 51
      z: 81
    }
    index: 3
  }
  nodes {
    position {
      x: 51
      z: 76
    }
    index: 4
  }
  can_move_beyond_node: false
  idRef {
    id: "54cd8193613131bc1e002662"
  }
}
patrolRoutes {
  name: "PenthousePatrol"
  pathType: 0
  nodes {
    position {
      x: 112
      z: 24
    }
    index: 0
  }
  nodes {
    position {
      x: 116
      z: 25
    }
    index: 1
  }
  nodes {
    position {
      x: 118
      z: 26
    }
    index: 2
  }
  nodes {
    position {
      x: 130
      z: 26
    }
    index: 3
  }
  nodes {
    position {
      x: 135
      z: 24
    }
    index: 4
  }
  nodes {
    position {
      x: 135
      z: 18
    }
    index: 5
  }
  nodes {
    position {
      x: 130
      z: 17
    }
    index: 6
  }
  nodes {
    position {
      x: 118
      z: 17
    }
    index: 7
  }
  nodes {
    position {
      x: 115
      z: 17
    }
    index: 8
  }
  nodes {
    position {
      x: 112
      z: 18
    }
    index: 9
  }
  nodes {
    position {
      x: 111
      z: 21
    }
    index: 10
  }
  nodes {
    position {
      x: 112
      z: 24
    }
    index: 11
  }
  can_move_beyond_node: true
  idRef {
    id: "54cdb802613131700e0009c1"
  }
}
patrolRoutes {
  name: "Bartender Path"
  pathType: 1
  nodes {
    position {
      x: 87
      z: 41
    }
    index: 0
  }
  nodes {
    position {
      x: 78
      z: 40
    }
    index: 1
  }
  nodes {
    position {
      x: 79
      z: 42
    }
    index: 2
  }
  nodes {
    position {
      x: 82
      z: 40
    }
    index: 3
  }
  nodes {
    position {
      x: 84
      z: 40
    }
    index: 4
  }
  nodes {
    position {
      x: 90
      z: 40
    }
    index: 5
  }
  nodes {
    position {
      x: 91
      z: 45
    }
    index: 6
  }
  nodes {
    position {
      x: 91
      z: 49
    }
    index: 7
  }
  nodes {
    position {
      x: 91
      z: 53
    }
    index: 8
  }
  nodes {
    position {
      x: 83
      z: 53
    }
    index: 9
  }
  can_move_beyond_node: true
  idRef {
    id: "54ceaaf4613131c01c006e60"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 61
    y: 0
    z: 42
  }
  orientation: ORIENTATION_S
  idRef {
    id: "53e487bd373361dc060052e3"
  }
  lod: 0
  character_instance {
    prefab_name: "Matrix/MatrixICE_black_range"
    character_sheet_id: "IC_Lv5_Black_Ranged"
    equipment_sheet_id: "IC Black Ranged Lv5 Gear"
    character_mod {
      stats {
        morale: 24
        discipline: 24
        awareness: 24
        perception: 0
        authority: 0
        protect_tether_range: 5
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Black IC"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "matrix"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 61
    y: 0
    z: 26
  }
  orientation: ORIENTATION_S
  idRef {
    id: "53e487e6373361dc060052e4"
  }
  lod: 0
  character_instance {
    prefab_name: "Matrix/MatrixICE_black_range"
    character_sheet_id: "IC_Lv5_Black_Ranged"
    equipment_sheet_id: "IC Black Ranged Lv5 Gear"
    character_mod {
      stats {
        morale: 24
        discipline: 24
        awareness: 24
        protect_tether_range: 5
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
    }
    team_id: "Civilians"
    char_name: "Black IC"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "matrix"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 45
    y: 0
    z: 26
  }
  orientation: ORIENTATION_S
  idRef {
    id: "53e487ec373361dc060052e5"
  }
  lod: 0
  character_instance {
    prefab_name: "Matrix/MatrixICE_black_range"
    character_sheet_id: "IC_Lv5_Black_Ranged"
    equipment_sheet_id: "IC Black Ranged Lv5 Gear"
    character_mod {
      stats {
        morale: 24
        discipline: 24
        awareness: 24
        protect_tether_range: 5
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
    }
    team_id: "Civilians"
    char_name: "Black IC"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "matrix"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 45
    y: 0
    z: 42
  }
  orientation: ORIENTATION_S
  idRef {
    id: "53e487ee373361dc060052e6"
  }
  lod: 0
  character_instance {
    prefab_name: "Matrix/MatrixICE_black_range"
    character_sheet_id: "IC_Lv5_Black_Ranged"
    equipment_sheet_id: "IC Black Ranged Lv5 Gear"
    character_mod {
      stats {
        morale: 24
        discipline: 24
        awareness: 24
        protect_tether_range: 5
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
    }
    team_id: "Civilians"
    char_name: "Black IC"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "matrix"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 56
    y: 0
    z: 65
  }
  orientation: ORIENTATION_S
  displayName: "Girl2"
  idRef {
    id: "53e487f3373361dc060052e7"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    prerequisites {
      ops {
        functionName: "Evaluate Nuyen"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 10
        }
      }
    }
    conversationPoint {
      conversationID: "54cdc6c6613131700e0009fb"
      turnToFace: true
    }
    interaction_info_text: "This virtual barista is a souless automaton, a simple ordering system for addicts."
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Story/CherryBomb"
    character_sheet_id: "IC_Lv2_Black_Ranged"
    equipment_sheet_id: "IC Black Ranged Lv5 Gear"
    character_mod {
      stats {
        morale: 24
        discipline: 24
        awareness: 24
        perception: 0
        authority: 0
        protect_tether_range: 5
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilian"
    char_name: "Virtual Barista"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "matrix"
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 116
    y: 0
    z: 21
  }
  orientation: ORIENTATION_N
  idRef {
    id: "53e4de47373361900c0079d1"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Matrix/MatrixICE_white_melee"
    character_sheet_id: "IC_Lv2_White_ChargeLaser"
    equipment_sheet_id: "IC White Melee Lv2 Gear"
    character_mod {
      archetypeName: "gumbo_MeleeSoldier"
      attitude: AttitudeAggressive
    }
    team_id: "Friendly IC"
    char_name: "White IC"
    pc_spawn_number: -1
    ai_ignores: true
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "matrix"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 130
    y: 0
    z: 17
  }
  orientation: ORIENTATION_N
  GeneralTags: "PenthouseIC"
  displayName: "2"
  idRef {
    id: "53e4de6b373361900c0079d2"
  }
  lod: 0
  character_instance {
    prefab_name: "Matrix/SpiritESPShield"
    character_sheet_id: "IC_Lv1_White_Ranged"
    equipment_sheet_id: "IC White Support Lv1 Gear"
    character_mod {
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
    }
    team_id: "Friendly IC"
    char_name: "Penthouse IC"
    GeneralTags: "PenthouseIC"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "matrix"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 112
    y: 0
    z: 24
  }
  orientation: ORIENTATION_S
  GeneralTags: "PenthouseIC"
  displayName: "1"
  idRef {
    id: "53e4de7d373361900c0079d3"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Matrix/MatrixICE_white_melee"
    character_sheet_id: "IC_Lv1_White_Ranged"
    equipment_sheet_id: "IC White Support Lv1 Gear"
    character_mod {
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
    }
    team_id: "Friendly IC"
    char_name: "Penthouse IC"
    GeneralTags: "PenthouseIC"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "matrix"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 117
    y: 0
    z: 18
  }
  orientation: ORIENTATION_N
  displayName: "1"
  idRef {
    id: "54962ac16131318c18002690"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/CorpTurret"
    character_sheet_id: "AGChemie_Cyberzombie_Lv1"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        armor: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        dodge: 0
      }
      specializations {
        rifle: 0
        edged: 0
        unarmed: 0
      }
      vulnerabilities {
      }
    }
    team_id: "Friendly IC"
    char_name: "Penthouse Defenses"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: "pc_dwarffemale_00b"
    }
    karma: 174
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 143
    y: 0
    z: 156
  }
  orientation: ORIENTATION_N
  displayName: "PC0"
  idRef {
    id: "54cd48ca613131bc1e0024d2"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "Ego"
    enabled_at_start: true
    pc_spawn_number: 0
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 49
    y: 0
    z: 66
  }
  orientation: ORIENTATION_N
  displayName: "Girl1"
  idRef {
    id: "54cd80a1613131bc1e002627"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 2
    prerequisites {
      ops {
        functionName: "Evaluate Nuyen"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 10
        }
      }
    }
    conversationPoint {
      conversationID: "54cdc6c6613131700e0009fb"
      turnToFace: true
    }
    interaction_info_text: "This virtual barista is a empty program shell, a simple ordering system for elitist soykaf."
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Story/DianeSilverstar"
    character_sheet_id: "IC_Lv2_Black_Ranged"
    equipment_sheet_id: "IC Black Ranged Lv5 Gear"
    character_mod {
      stats {
        morale: 24
        discipline: 24
        awareness: 24
        perception: 0
        authority: 0
        protect_tether_range: 5
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilian"
    char_name: "Virtual Barista"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "matrix"
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 53
    y: 0
    z: 78
  }
  orientation: ORIENTATION_S
  displayName: "Patrolling"
  idRef {
    id: "54cd8151613131bc1e002661"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Matrix/MatrixICE_white_melee"
    character_sheet_id: "IC_Lv1_White_Melee"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 2
        force: 0
        morale: 0
        discipline: 24
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Matrix Basic Attack (Melee IC Lv 2)"
    }
    team_id: "Civilian"
    char_name: "IC"
    patrolRoute: "Doghouse Firewall"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "matrix"
    karma: 29
    is_prop_character: false
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 117
    y: 0
    z: 25
  }
  orientation: ORIENTATION_N
  displayName: "2"
  idRef {
    id: "54cd9b37613131700e000800"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/CorpTurret"
    character_sheet_id: "IC_Lv1_White_Ranged"
    equipment_sheet_id: "IC White Ranged Low"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: -50
        ap: 0
        armor: 1
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: -4
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Friendly IC"
    char_name: "Penthouse Defenses"
    pc_spawn_number: -1
    spawn_type: SpawnType_Normal
    hiring_type: HiringType_None
    portrait {
      filename: "pc_dwarffemale_00b"
    }
    karma: 29
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 36
    y: 0
    z: 50
  }
  orientation: ORIENTATION_N
  displayName: "Civilian"
  idRef {
    id: "54cda231613131700e000847"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:Gangers/HumanMaleBerlinGangerBanditMask"
    character_sheet_id: "IC_Lv5_Black_Ranged"
    equipment_sheet_id: "IC Black Ranged Lv5 Gear"
    character_mod {
      stats {
        morale: 24
        discipline: 24
        awareness: 24
        protect_tether_range: 5
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
    }
    team_id: "Civilian"
    char_name: "Vandal"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "matrix"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 112
    y: 0
    z: 158
  }
  orientation: ORIENTATION_S
  GeneralTags: "isUnhired"
  displayName: "Aro Simeon"
  idRef {
    id: "54cdab97613131700e000877"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    conversationPoint {
      conversationID: "537091876465657412003ce2"
      turnToFace: true
    }
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:Story/HumanMaleAmsel"
    character_sheet_id: "Lvl1_Merc_Dwarf_CombatDecker"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      vulnerabilities {
      }
    }
    team_id: "Civilian"
    char_name: "Silver ARO"
    GeneralTags: "isUnhired"
    pc_spawn_number: -1
    karma: 49
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 112
    y: 0
    z: 156
  }
  orientation: ORIENTATION_S
  GeneralTags: "isUnhired"
  displayName: "Evelyn  Fogherty"
  idRef {
    id: "54cdab97613131700e000878"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    conversationPoint {
      conversationID: ""
      turnToFace: true
    }
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Story/WeaponsDealer"
    character_sheet_id: "Crew_Monika_Lv1"
    team_id: "Civilian"
    char_name: "Nebel"
    GeneralTags: "isUnhired"
    enabled_at_start: true
    pc_spawn_number: -1
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 110
    y: 0
    z: 158
  }
  orientation: ORIENTATION_W
  displayName: "Alice"
  idRef {
    id: "54cdac62613131700e00087b"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Creature/CreatureGhoulHumanFemale"
    character_sheet_id: "Crew_Monika_Lv1"
    team_id: "Shadowrunners"
    char_name: "Matrix Spirit"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 13
    y: 0
    z: -15
  }
  orientation: ORIENTATION_E
  GeneralTags: "HighwayTraffic.Superman"
  displayName: "1"
  idRef {
    id: "54cdb5b8613131700e0009b2"
  }
  lod: 0
  character_instance {
    team_id: "Friendly Decker"
    char_name: "Superman"
    GeneralTags: "HighwayTraffic.Superman"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 14
    y: 0
    z: -15
  }
  orientation: ORIENTATION_E
  GeneralTags: "HighwayTraffic.Superman"
  displayName: "2"
  idRef {
    id: "54cdb5e1613131700e0009b3"
  }
  lod: 0
  character_instance {
    team_id: "Friendly Decker"
    char_name: "Superman"
    GeneralTags: "HighwayTraffic.Superman"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 15
    y: 0
    z: -15
  }
  orientation: ORIENTATION_E
  GeneralTags: "HighwayTraffic.Superman"
  displayName: "3"
  idRef {
    id: "54cdb5e3613131700e0009b4"
  }
  lod: 0
  character_instance {
    team_id: "Friendly Decker"
    char_name: "Superman"
    GeneralTags: "HighwayTraffic.Superman"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 15
    y: 0
    z: -14
  }
  orientation: ORIENTATION_E
  GeneralTags: "HighwayTraffic.Superman"
  displayName: "4"
  idRef {
    id: "54cdb5e4613131700e0009b5"
  }
  lod: 0
  character_instance {
    team_id: "Friendly Decker"
    char_name: "Superman"
    GeneralTags: "HighwayTraffic.Superman"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 14
    y: 0
    z: -14
  }
  orientation: ORIENTATION_E
  GeneralTags: "HighwayTraffic.Superman"
  displayName: "5"
  idRef {
    id: "54cdb5e6613131700e0009b6"
  }
  lod: 0
  character_instance {
    team_id: "Friendly Decker"
    char_name: "Superman"
    GeneralTags: "HighwayTraffic.Superman"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 13
    y: 0
    z: -14
  }
  orientation: ORIENTATION_E
  GeneralTags: "HighwayTraffic.Superman"
  displayName: "6"
  idRef {
    id: "54cdb5e8613131700e0009b7"
  }
  lod: 0
  character_instance {
    team_id: "Friendly Decker"
    char_name: "Superman"
    GeneralTags: "HighwayTraffic.Superman"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 15
    y: 0
    z: 89
  }
  orientation: ORIENTATION_W
  GeneralTags: "HighwayTraffic.Batman"
  displayName: "1"
  idRef {
    id: "54cdb606613131700e0009b8"
  }
  lod: 0
  character_instance {
    team_id: "Friendly Decker"
    char_name: "Batman"
    GeneralTags: "HighwayTraffic.Batman"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 14
    y: 0
    z: 89
  }
  orientation: ORIENTATION_W
  GeneralTags: "HighwayTraffic.Batman"
  displayName: "2"
  idRef {
    id: "54cdb62b613131700e0009bb"
  }
  lod: 0
  character_instance {
    team_id: "Friendly Decker"
    char_name: "Batman"
    GeneralTags: "HighwayTraffic.Batman"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 13
    y: 0
    z: 89
  }
  orientation: ORIENTATION_W
  GeneralTags: "HighwayTraffic.Batman"
  displayName: "3"
  idRef {
    id: "54cdb62c613131700e0009bc"
  }
  lod: 0
  character_instance {
    team_id: "Friendly Decker"
    char_name: "Batman"
    GeneralTags: "HighwayTraffic.Batman"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 15
    y: 0
    z: 88
  }
  orientation: ORIENTATION_W
  GeneralTags: "HighwayTraffic.Batman"
  displayName: "4"
  idRef {
    id: "54cdb62e613131700e0009bd"
  }
  lod: 0
  character_instance {
    team_id: "Friendly Decker"
    char_name: "Batman"
    GeneralTags: "HighwayTraffic.Batman"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 14
    y: 0
    z: 88
  }
  orientation: ORIENTATION_W
  GeneralTags: "HighwayTraffic.Batman"
  displayName: "5"
  idRef {
    id: "54cdb630613131700e0009be"
  }
  lod: 0
  character_instance {
    team_id: "Friendly Decker"
    char_name: "Batman"
    GeneralTags: "HighwayTraffic.Batman"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 13
    y: 0
    z: 88
  }
  orientation: ORIENTATION_W
  GeneralTags: "HighwayTraffic.Batman"
  displayName: "6"
  idRef {
    id: "54cdb631613131700e0009bf"
  }
  lod: 0
  character_instance {
    team_id: "Friendly Decker"
    char_name: "Batman"
    GeneralTags: "HighwayTraffic.Batman"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 88
    y: 0
    z: 52
  }
  orientation: ORIENTATION_S
  displayName: "Artful"
  idRef {
    id: "54cea6d1613131c01c006e5f"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Story/Dodger"
    character_sheet_id: "Lvl6_Elf_Decker"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "CyberdeckVirtuaX"
    }
    equipment {
      prefab_name: "PR Supression 1"
    }
    equipment {
      prefab_name: "PR Firewall 2"
    }
    equipment {
      prefab_name: "PR Degrade 3"
    }
    equipment {
      prefab_name: "ESP Kamikaze"
    }
    equipment {
      prefab_name: "ESP Shield"
    }
    equipment {
      prefab_name: "PR Medic 2"
    }
    equipment {
      prefab_name: "PR Blaster 2"
    }
    equipment {
      prefab_name: "Pi 2 Ares Predator (Smartlink)"
    }
    equipment {
      prefab_name: "HealthPack_med"
    }
    equipment {
      prefab_name: "Grenade 2 (Flash)"
    }
    equipment {
      prefab_name: "Grenade 2 (Flash)"
    }
    equipment {
      prefab_name: "ESP Attacker"
    }
    team_id: "Friendly IC"
    char_name: "Dodger"
    pc_spawn_number: -1
    spawn_type: SpawnType_Normal
    hiring_type: HiringType_Forced
    cyberware_jack: "Datajack"
    portrait {
      filename: "NPC_ElfMale_ArtfulDodger"
    }
    description_bio: "A legend in the Shadows both in matrix and out."
    dimension_name: "SeattleLTG"
    karma: 150
    hiring_cost_override: 1000
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 110
    y: 0
    z: 157
  }
  orientation: ORIENTATION_S
  idRef {
    id: "54cead45613131c01c006e62"
  }
  lod: 0
  character_instance {
    team_id: "Civilian"
    char_name: "New Actor"
    pc_spawn_number: -1
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 85
    y: 0
    z: 40
  }
  orientation: ORIENTATION_E
  displayName: "Ingo"
  idRef {
    id: "54ceae90613131c01c006e63"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/HumanFemale"
    character_sheet_id: "Crew_Monika_Lv1"
    equipment_sheet_id: "Crew_Monika_Lv1_Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AdeptKunai"
    }
    team_id: "Civilian"
    char_name: "Jingoistic"
    pc_spawn_number: -1
    spawn_type: SpawnType_Normal
    portrait {
      filename: "pc_humanmale_06c_shavedhead"
    }
    dimension_name: "SeattleLTG"
    karma: 101
    is_prop_character: true
  }
}
variables {
  bool_value: true
  variableref_value {
    scope: TsVariableScope_Scene
    name: "bool_PenthouseClosed"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Matrix_Doghouse"
    typeName: "bool"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "int_Core1"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "int_Core2"
    typeName: "int"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "bool_1Up"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "bool_2up"
    typeName: "bool"
  }
}
mapEvents: "eve_FLOP"
mapEvents: "eve_Minions"
mapEvents: "eve_MatrixExit"
senseTags: "MainGuy"
goals {
  name: "Hacking Hernandez"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Hacking Foley"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
worldMapLocation {
  filename: ""
  location {
    x: 0
    y: 0
  }
}
mapName: "SCENE - Seattle LTG [Matrix]"
parentStory: ""
scene_title: "$(story.str_SceneTitle)"
scene_subtitle: ""
scene_synopsis: "$(story.str_SceneDetails)"
scene_image: "marialoading"
scene_continue_button_skip: false
scene_restore_runner_health: false
directional_light_dir {
  x: -0.5
  y: -1
  z: -0.75
}
directional_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
ambient_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
allow_drawn_weapons: false
team_affiliations {
  team_name: "Shadowrunners"
  affiliation: 0
  affiliation: 1
  affiliation: 1
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Hostil IC"
  affiliation: 1
  affiliation: 0
  affiliation: 1
  affiliation: 1
  affiliation: 1
  affiliation: 0
}
team_affiliations {
  team_name: "Enemy Decker"
  affiliation: 1
  affiliation: 1
  affiliation: 0
  affiliation: 0
  affiliation: 1
  affiliation: 0
}
team_affiliations {
  team_name: "Civilian"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Friendly IC"
  affiliation: 0
  affiliation: 0
  affiliation: 1
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Friendly Decker"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
scene_dimensions {
  dimension_name: "Default"
}
scene_dimensions {
  dimension_name: "HernandezNode"
  initial_alarm_state: 0
  turns_per_round: 1
}
scene_dimensions {
  dimension_name: "FoleyNode"
  initial_alarm_state: 10
  turns_per_round: 1
}
scene_dimensions {
  dimension_name: "SeattleLTG"
  initial_alarm_state: 1
  turns_per_round: 1
}
show_hiring_screen_on_scene_load: false
scene_hiring_prerequisites {
  prereq_description: ""
  prereq_conditions {
  }
}
hiring_slot_count: 0
hiring_minimum_karma: 0
hiring_maximum_karma: 0
roster_overrides {
}
use_hiring_cost_warning: false
hiring_average_cost: 0
override_hiring_average_cost: false
show_equip_screen_on_scene_load: false
is_persistant: false
is_persistant_has_value: false
can_move_outside_camera_regions: true
can_start_before_triggers: false
can_use_team_advancement: false
